<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on lowply.github.io</title>
    <link>https://lowply.github.io/blog/</link>
    <description>Recent content in Blogs on lowply.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 17 Aug 2017 19:56:26 +0900</lastBuildDate>
    
	<atom:link href="https://lowply.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitHub PagesとマージしてURLを変えた</title>
      <link>https://lowply.github.io/blog/2017/08/merge-github-pages/</link>
      <pubDate>Thu, 17 Aug 2017 19:56:26 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2017/08/merge-github-pages/</guid>
      <description>2006年から使っていたfixture.jpというドメインをブログに使うのをやめて、これまでプロフィール的に使っていたGitHub Pagesのドメインlowply.github.ioに統合しました。
2016年の6月にGitHubに入社して以来、Pagesをもう少し積極的に使っていきたいと思っていたのと、HTTPSを使いたいだけのためにCloudFrontを経由したS3でホストするのも大げさだなと思ってのアイデアです。
ちょっと困ったのは、lowply.github.ioのようなドメイン直下にPagesのサイトを置きたい場合、ソースの配置先はmasterブランチのみで/docsが選べなかったこと。
 If your site is a User or Organization Page that has a repository named &amp;lt;username&amp;gt;.github.io or &amp;lt;orgname&amp;gt;.github.io, you cannot publish your site&amp;rsquo;s source files from different locations. User and Organization Pages that have this type of repository name are only published from the master branch.
 Configuring a publishing source for GitHub Pages
Hugoで生成したファイル群をリポジトリの直下に置かないといけないので、ディレクトリの見通しが悪くなる。仕方がないからコンテンツやテーマといったHugo関連のファイル群を.hugoディレクトリに置くことに。隠しディレクトリにしているのは、hugoコマンドに--cleanDestinationDirをつけても自分自身が消されないためです。
というわけで、書きたいネタは少しずつ浮かぶものの形にできず更新が止まっているブログですが、引き続き時間を見て書いていきます。Photo Journalもそのうち更新します。</description>
    </item>
    
    <item>
      <title>AWS Route 53用のCLIツールをGoで書いた</title>
      <link>https://lowply.github.io/blog/2017/01/wrote-lacrosse/</link>
      <pubDate>Sat, 14 Jan 2017 03:33:43 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2017/01/wrote-lacrosse/</guid>
      <description>AWS Route 53 上の特定の FQDN に対して value と TTL を指定して UPSERT をリクエストするコマンドラインツールを書いた。元々は気楽なシェルスクリプトだったものを、練習も兼ねて Go で書き直して GitHub Release へのデプロイまでちゃんとやってみた。
lowply/lacrosse: A simple CLI tool to update DNS records on Amazon Route 53
動機 そもそもは、 Let’s Encrypt のドメイン認証を lukas2511/dehydrated を使って dns-01 challenge で実行したくて、それ用の hook スクリプト内で手軽に _acme-challenge.example.com への TXT レコードを設定したいというのがきっかけだった。これを使うと hook.sh の deploy_challenge 部分を下記のように書ける。
deploy_challenge() { local DOMAIN=&amp;quot;${1}&amp;quot; TOKEN_FILENAME=&amp;quot;${2}&amp;quot; TOKEN_VALUE=&amp;quot;${3}&amp;quot; lacrosse _acme-challenge.${DOMAIN} TXT ${TOKEN_VALUE} 300 default }  で、これが個人的にすごく便利で気に入っていたので、 思いついて Go で書き直してみることにした。パッケージの依存関係については Masterminds/glide、クロスコンパイルには mitchellh/gox、CI には Travis CI、デプロイはタグ打って push すると Travis が ビルドしてバイナリを GitHub Release に上げてくれる、という感じでシンプルに、あまり複雑なライブラリとかは使わないようにした。</description>
    </item>
    
    <item>
      <title>tmux2.1をコンパイルするスクリプトを書いた</title>
      <link>https://lowply.github.io/blog/2016/04/tmux-21-install-script/</link>
      <pubDate>Fri, 01 Apr 2016 15:09:00 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2016/04/tmux-21-install-script/</guid>
      <description>tmux1.8が出たのでlibevent2.0系を1.4系と共存させつつコンパイルするメモ で書いたとおりいつもめんどくさいので、インストールスクリプトを書きました。
 /tmp でコンパイルするので最初の yum で依存関係をインストールするときだけ sudo が必要です。バイナリは /usr/local/tmux に入るので適当に cd /usr/local/bin; ln -s /usr/local/tmux/bin/tmux . とかしてください。
Hugo は gist を貼っつける shortcode があって良い。あと Twitter の shortcode もある。
OK, this is the final and complete installation script of tmux-2.1. https://t.co/wzegeGqdQX
&amp;mdash; lowply (@lowply) April 1, 2016  </description>
    </item>
    
    <item>
      <title>Feed Test</title>
      <link>https://lowply.github.io/blog/2015/08/feed-test/</link>
      <pubDate>Mon, 10 Aug 2015 23:42:22 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2015/08/feed-test/</guid>
      <description>This is a test post for feed test</description>
    </item>
    
    <item>
      <title>Hugo &#43; S3環境に移行した（インストール編）</title>
      <link>https://lowply.github.io/blog/2015/08/moved-to-hugo-s3-install/</link>
      <pubDate>Mon, 10 Aug 2015 16:18:52 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2015/08/moved-to-hugo-s3-install/</guid>
      <description>やっとこのブログをWordPressからHugoに移動したのでその過程をメモしておく。この後にテーマ作成編が続く（予定）。
Hugo Hugoは高速なビルドが特徴の、Go製スタティックサイトジェネレータ。いろいろなところで紹介されているので説明は省略。今回は生成したサイトをAmazon S3でホストする。
環境 Hugoは安定版をバイナリでリリースしているが、開発版をソースからビルドしたいのでGoの環境を入れておく。デプロイはS3にするのでawscliが必要。また、プレビュー用のVirtual Hostを作るのでNginxを入れておく。これは別にApacheでもいい。
$ cat /etc/redhat-release CentOS Linux release 7.1.1503 (Core) $ go version go version go1.4.2 linux/amd64 $ git version git version 1.8.3.1 $ pyenv versions system * 2.7.10 (set by /root/.pyenv/version) 3.4.3 $ pip list | grep aws awscli (1.7.42) $ aws --version aws-cli/1.7.42 Python/2.7.10 Linux/3.10.0-229.7.2.el7.x86_64 $ nginx -v nginx version: nginx/1.9.3  Hugoインストール ドキュメント通り。
$ go get -v github.com/spf13/hugo $ hugo version Hugo Static Site Generator v0.</description>
    </item>
    
    <item>
      <title>Moved</title>
      <link>https://lowply.github.io/blog/2015/06/moved/</link>
      <pubDate>Sat, 06 Jun 2015 19:18:44 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2015/06/moved/</guid>
      <description>Moved to new VPS, now this blog is powered by nginx and php-fpm on Cent OS 7.1</description>
    </item>
    
    <item>
      <title>Dockerが公式にOS Xに対応したので試してみた</title>
      <link>https://lowply.github.io/blog/2014/02/docker-tryout/</link>
      <pubDate>Sun, 09 Feb 2014 02:09:46 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2014/02/docker-tryout/</guid>
      <description>boot2docker First, install the Docker binary which will forward all commands to a remote docker daemon Second, install Boot2Docker, which is a super-lightweight Linux VM capable of running a docker daemon on your Mac with the smallest possible overhead. Currently it occupies 24MB on disk and boots in less than 10 seconds. DOCKER 0.8: QUALITY, NEW BUILDER FEATURES, BTRFS, OSX SUPPORT  とのこと。まずboot2dockerについて。これはなんだ、と。
 これまでMacでDockerを使う場合はVirtualBoxなりVMware FusionなりでUbuntuとかを動かして、その中でDockerを使う必要があった しかしそれでは毎回最初の一歩が重くてDockerのメリットが活かせないし、ネイティブにDockerを使えたほうが何かと便利 そこでboot2dockerというものが考案された これは厳密にはソフトウェアではなく、Dockerを動かすことに特化したTiny Core Linuxベースのisoイメージと、それをインストールしたVirtualBoxをコントロールするシェルスクリプトの組み合わせ boot2dockerが起動している状態であれば、OS XのターミナルからDockerを直接操作できる（Docker 0.</description>
    </item>
    
    <item>
      <title>tmux1.8が出たのでlibevent2.0系を1.4系と共存させつつコンパイルするメモ</title>
      <link>https://lowply.github.io/blog/2013/03/how-to-compile-libevent-20-with-tmux-18/</link>
      <pubDate>Sat, 30 Mar 2013 05:40:00 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2013/03/how-to-compile-libevent-20-with-tmux-18/</guid>
      <description>いつの間にかtmux1.8が出てた。
で、CentOS使い恒例のlibevent2.0系問題。epelやrpmforgeなどのレポジトリにもまだ2.0のrpmは出てないのでいろいろな手法がポストされてますね。
libevent1.4系はyum removeするとmemcachedが消えたりして依存関係がきついので、消さずに2.0をソースから（prefix切って）入れて共存させたいなー、と思ってたらすごくシンプルな方法を見つけたのでメモ。
まずlibeventをprefix付きでコンパイル
$ ./configure --prefix=/usr/local/libevent2 $ make $ make install $ echo &amp;quot;/usr/local/libevent2/lib&amp;quot; &amp;gt;&amp;gt; /etc/ld.so.conf.d/libevent2.conf $ ldconfig  tmuxをconfigureするときにCFLAGSとLDFLAGSを指定
$ ./configure --prefix=/usr/local/tmux CFLAGS=&amp;quot;-I/usr/local/libevent2/include&amp;quot; LDFLAGS=&amp;quot;-L/usr/local/libevent2/lib&amp;quot; $ make $ make install  これだけでOK。
参考にしたstack exchangeのフォーラムには、本来なら &amp;ndash;with-libevent=dir みたいなconfigure optionがあるべきだよね、というコメントがあるので今後のtmuxに期待したい。
他には、こんな感じでldconfigとpkg-configを設定してやる方法もある。
tmux のインストール | ja.528p.com
130523 追記 ./configure --help をよく見たら LIBEVENT_CFLAGS と LIBEVENT_LIBS という環境変数が指定できると書いてあった。しかも1.7の時にはすでにあった。。。こちらの方が良さげだ、というわけで下記を試してみたらうまくいった。
$ ./configure --prefix=/usr/local/tmux LIBEVENT_LIBS=&amp;quot;-L/usr/local/libevent2/lib -levent&amp;quot; LIBEVENT_CFLAGS=&amp;quot;-I/usr/local/libevent2/include&amp;quot; $ make $ make install  160401 追記 tmux2.1をコンパイルするスクリプトを書いた</description>
    </item>
    
    <item>
      <title>Mountain Lionにdnsmasqをインストールするメモ</title>
      <link>https://lowply.github.io/blog/2013/02/how-to-install-dnsmasq-on-mountain-lion/</link>
      <pubDate>Mon, 11 Feb 2013 04:13:15 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2013/02/how-to-install-dnsmasq-on-mountain-lion/</guid>
      <description>タイトル通りではあるけど、いろいろハマったのでメモ。
dnsmasqというのは簡易DNS/DHCPサーバー。/etc/hostsを書き換えるよりもう少し低いレイヤーでレコードを書き換えてくれるイメージ（フォワーダーと呼ばれたりする）。なので、Aレコードだけではなくほとんどのレコード書き換えができたりします。詳細はWikipediaとかで。今回はMXレコードを書き換えたい事情があって導入してみた。
インストール いつも通り、homebrew様。brew後に出てくるビールの絵文字がかわいい。
$ brew update &amp;amp;&amp;amp; brew install dnsmasq  設定 confを複製して編集
$ cp -a /usr/local/Cellar/dnsmasq/2.65/dnsmasq.conf.example /usr/local/etc/dnsmasq.conf $ vim /usr/local/etc/dnsmasq.conf  以下を書き換え
resolv-file=/etc/resolv.dnsmasq.conf listen-address=127.0.0.1 conf-dir=/usr/local/etc/dnsmasq.d  conf用ディレクトリを作成
$ mkdir /usr/local/etc/dnsmasq.d  plistを複製。Macの場合、launchctlがこのplistに書かれているオプションとかをつけてバイナリを実行する。
$ sudo cp /usr/local/Cellar/dnsmasq/2.65/homebrew.mxcl.dnsmasq.plist /Library/LaunchDaemons  現在のDNSキャッシュサーバーのIPを、dnsmasq用のresolv.confに書く。フィルタにマッチしなかった場合これに問い合わせることになる。
$ cat /etc/resolv.conf $ sudo vim /etc/resolv.dnsmasq.conf  起動
$ sudo launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist  確認
$ scutil --dns $ ps ax | grep [d]nsmasq  キャッシュサーバーをdnsmasqに変更（この時点でミスがあると名前が引けなくなる）</description>
    </item>
    
    <item>
      <title>tmux&#43;vim&#43;solarizedの人はsolarized_termtransオプションを使おう</title>
      <link>https://lowply.github.io/blog/2013/02/solarized-termtrans-option/</link>
      <pubDate>Mon, 11 Feb 2013 02:06:31 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2013/02/solarized-termtrans-option/</guid>
      <description>vim + molokaiを使っていて背景がおかしいというエントリーを書いた後、これが再現するのはtmuxを使っている時だけということがわかった。具体的には
 Terminal.app on Mountain Lion declare -x TERM=&amp;ldquo;xterm-256color&amp;rdquo; tmux 1.7 vim + molokai  という環境の時。
で、ある日何気なくsolarizedのreadmeを読んでいたらこんな記述が。
g:solarized_termtrans
If you use a terminal emulator with a transparent background and Solarized isn&amp;rsquo;t displaying the background color transparently, set this to 1 and Solarized will use the default (transparent) background of the terminal emulator. urxvt required this in my testing; iTerm2 did not.
Note that on Mac OS X Terminal.app, solarized_termtrans is set to 1 by default as this is almost always the best option.</description>
    </item>
    
    <item>
      <title>Terminal.appでSSHするとlocaleを英語にできない</title>
      <link>https://lowply.github.io/blog/2013/01/how-to-set-locale-to-english-with-terminal-app/</link>
      <pubDate>Fri, 25 Jan 2013 02:16:37 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2013/01/how-to-set-locale-to-english-with-terminal-app/</guid>
      <description>2013/02/01 追記: 結局 ssh_config を修正。
コンソールメッセージが日本語なのは嫌じゃないですか。でlocaleの設定変えようと思って
$ cat /etc/sysconfig/i18n LANG=&amp;quot;en_US.UTF-8&amp;quot;  こんな感じにしても、次回sshすると
$ echo $LANG ja_JP.UTF-8 $ locale | grep LC_CTYPE LC_CTYPE=&amp;quot;ja_JP.UTF-8&amp;quot;  とか言われてイラッとする場合。
調べてみると[計算機] Lion からの ssh ログイン先で locale がどうのこうの、といわれる。
どうやら Lion から ssh をするときに LC_* 環境変数を送っているのが問題らしい。   なるほど手元の10.8.2でも確かに /etc/ssh_config に
SendEnv LANG LC_*  という記述があった。ただ、これ編集したくないなあ。。。と思ってたら、Terminal.appにそれを制御する設定を見つけた。
 この「起動時にロケール環境変数を設定」をオフにして、Terminal.appを再起動すればOK。
2013/02/01 追記：これを行うことで、Terminalがローカル環境の日本語ファイル名を正しく表示してくれないことがわかったので、結局 /etc/ssh_config を修正した。~/.ssh/configでSendEnvをOverrideできないか調べてみたけど、UnSendEnvとか各所から提案されつつも実現していないらしい。
といってもOS Xの言語を英語にしている人には関係ないです。
ココにそれっぽいことは書いてあったのは見つけた。→ Beginning OS X Lion/インフラ整備編</description>
    </item>
    
    <item>
      <title>Kindle PaperwhiteがAirmac Expressにつながらない</title>
      <link>https://lowply.github.io/blog/2012/11/how-to-connect-kindle-paperwhite-to-wifi/</link>
      <pubDate>Tue, 20 Nov 2012 02:21:04 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/11/how-to-connect-kindle-paperwhite-to-wifi/</guid>
      <description>Kindle Paperwhiteが来たから、箱から出して、電源入れて、Wi-Fiにつなごうと思ったらつながらない。ルーターはAirmac Expressの2012モデル。手持ちのイーモバイル（GL01P）のWi-Fiにはつながるので、Kindleの初期不良じゃないっぽい。
WPA2の認証までは通ってるので、なんとなくDHCP周りかなと思ってスタティックに切り替えて適当に192.168.1.100とかを振ってあげたらあっさりつながった。悩んでる人はお試しを。
ちなみに本体のレビューとしては、軽いし読みやすいくて、旅に良さそう。</description>
    </item>
    
    <item>
      <title>要約 : Apple iPhone5のページのJPEGとJSとcanvasタグによるビデオの実装がやばいという話</title>
      <link>https://lowply.github.io/blog/2012/09/how-apple-compresses-video-in-iphone5-website/</link>
      <pubDate>Wed, 19 Sep 2012 21:29:43 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/09/how-apple-compresses-video-in-iphone5-website/</guid>
      <description>2012年9月26日 追記しました。
要約エントリー。
元記事 : iPhone 5 website teardown: How Apple compresses video using JPEG, JSON, and &amp;lt;canvas&amp;gt;
アップルのサイトのiPhone5のページにある「スライドしてアンロック」のアニメーションが、信じられない実装になっている、という話。簡単に要約してみた。（ミスなどの指摘は @lowply までお願いします）
もともとh.264とWebMの動画フォーマット戦争でブラウザ互換性の問題がまだ残っている上、iPhoneなどは「再生ボタン」を押さないと再生できなかったりするので、こうした短いアニメーションにvideoタグを使うことは最適解ではなかったらしい。
そこで発想の転換をして、Retina MBPのページでは、蓋が開くたった2秒間のアニメーションに60枚のJPGをぶん回すという荒業を使っていた。これは実に5MBもの画像を使っていることになる（そのかわりRetinaディスプレイに対応した画像サイズにはなっていない）↓ これ。
で、今回のiPhone5のアンロックアニメーションは更に手法を更に進化させて、1MBに収まる2枚のJPG画像をJSで高速に差し替えてcanvasタグ内に描画している。各フレームごとのJPGの位置はJSONで記述されていて、全体的な制御は ac_flow.js が行なっていると。圧縮されたJPG画像はこんな感じ。注：バグってるわけではありません。元画像はこちら
ここまで来ると誰にも真似できないというか、驚きを通り越して恐怖。昔から思ってたけど、Appleのウェブサイトって本当に一つの目指すべき姿だと思う。
元記事にはより技術的な詳細や、EarPodsのQTVR的な動きの実装についても言及されているので、すべてのUI/UXデザインに関わる人にとって一読の価値ありかと。
2012年9月26日 追記 昨夜、この記事がFICCの@akirafukuokaさんに紹介され、さらに尊敬する@fladdictさんにRTされた形で一気に拡散し、ホットエントリー入りしました。まさか自分のVPSが最大瞬間7.5Mbpsのトラフィックを出すとは思ってもいなかったです。
感動して勢いで書いた部分もあり、読み返して表現が間違ってるなーと思う部分もあったので訂正しつつ追記。
各方面のコメント はてブ http://b.hatena.ne.jp/entry/fixture.jp/blog/2012/09/how-apple-compresses-video-in-iphone5-website/
Twitter https://twitter.com/i/#!/search/?q=fixture.jp
一番見かけたのが「こんなん目指すべき姿じゃない」というご意見。
 アホ言え! 一番真似しちゃアカンタイプのバッドノウハウの塊やないかい!! こんなん目指してどうするんだよ。こういう事やらなくて良い世界目指す方でおねがいします。 まずSafariでインライン再生できるようにするのが先じゃないのか
 バッドかどうかは後述するとして、このノウハウそのものが「目指すべき姿」だとは思っていないのですが、言葉足らずでした。スミマセン。
ここで書きたかったことは、この10年Appleのサイトを見てきて一度も「大規模リニューアル」とかをせず、新製品が登場するごとに部分的に変化し、HTML5, JS, CSSを使って新しい技術を積極的に取り入れながら、まるで生き物のように成長していく全体的なサイト運営手法が、大規模オフィシャルサイトのひとつの「目指すべき姿」だと感じたということです。これは昔から思っていたことです。
Appleサイトに見るグローバルメニューの画像置換手法 | fixture.jp
ウェブ上での表現、特にモーションがあるものに関してはFlashからJSへの過渡期であったり、まだまだ模索段階だと思います。だから、一つの技法を編み出して、それを大規模サイトに躊躇なく投入していく実験的な姿勢が、次の時代の流れを作っていくのではないかと思っています。そういう意味で、今はバッドノウハウでも、やがて最適化されて未来の標準技術になっていく可能性は大いにあると思います。AJAXのように。
 これがバッドノウハウを使わないと実装できないのなら、間違ってるのは仕様の方です。実装は結果のためにあるのであって、逆ではありません。
 MotionJPEGが普及しなかったように、実装と仕様には常にタイミングの問題が絡みついてきますね。
あと次に見かけて驚いたのが、実は昔からある技法ということ。
 ぜんぜん違うけど何となくMSX時代の裏ページに置く展開前の超圧縮画像を思い出した 変態というか、8ビット時代のプログラミングって感じだな。 昔ながらのビデオプログラミングのやり方をHTML5流で。 古典的な技術の昇華がすごい。
 リソースが少なかった頃のレトロゲーム時代によくこういう実装をしていた、ということ。なるほど先人の知恵が細い3G回線とモバイルデバイスの環境でまた生きてくるわけですねー。ダブルバッファリングという単語も見かけましたが、ちょっと詳しくは調べきれていません。
 技術的にはすごいんだろうけど開いたらCPU使用率MAXになったので結果的にはイケてないサイトになってる
 これはスゴイ嫌ですね。昔のFlashサイトはこういうことよくありました。ただ今回の例では、自分の環境ではCPUは一瞬上がるだけで特に問題ないように思いました。</description>
    </item>
    
    <item>
      <title>molokai.vimの背景色を消すpatchを書いた</title>
      <link>https://lowply.github.io/blog/2012/08/patch-to-disable-molokai-bgcolor/</link>
      <pubDate>Wed, 15 Aug 2012 03:18:00 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/08/patch-to-disable-molokai-bgcolor/</guid>
      <description>2013/02/11 追記：tmux+vim+solarizedの人はsolarized_termtransオプションを使おうに続く。
vimのカラースキームにmolokaiを使ってる人、少なくないんじゃないかと思う。vim.orgのColor Scheme部門でRating 1位だし。僕もずっとこれ使ってますが、一つだけ、背景色の表示が気に入らない。これ、バグではないっぽいけど表示的に絶対おかしい気がする。

.vimrcをvimで開いた例。左がmolokaiの初期状態で、テキストの背景だけ薄いグレーになっていて、それ以外は背景色がない。右が修正後。ハイフンが続いてるコメント部分とかわかりやすいと思う。それで、これがタブ文字やスペースにもかかってくるから、ネストが深いコードとかはいい感じに違和感たっぷりになってくれる。
で、これを無効にするために、vimのカラースキーム定義とかいう完全に未知の世界を必死にさまよって、やっと該当の行を発見したのでpatch化した。たった1行だけど。。。
「molokaiのこれは仕様です」とか、「このパッチはカラースキーム的におかしい」とかあったら教えて下さい。
120817 UPDATE : パッチを当てるときはこんな感じで。（vim プラグインの位置は適宜変更）
$ cd /tmp $ git clone git://gist.github.com/3351367.git $ patch -u ~/dotfiles/.vim/bundle/molokai/colors/molokai.vim &amp;lt; /tmp/3351367/molokai.patch  </description>
    </item>
    
    <item>
      <title>.osx</title>
      <link>https://lowply.github.io/blog/2012/08/osx/</link>
      <pubDate>Wed, 01 Aug 2012 19:02:49 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/08/osx/</guid>
      <description>ここ数日、何台かのMacに山ライオンを入れていて、何度も同じOSの初期設定をするのに疲れていたら、タイムリーにも.osxなるものが流行っていた。
dotfiles/.osx at master · mathiasbynens/dotfiles · GitHub
要はdefaultsコマンドで大概の設定、例えばDockのサイズとか、Trackpadの設定とかをGUIを通さずにできるので、これをまとめてスクリプトにしたということで。これを叩けば一発で自分好みのFinderになるよ、と。でFinderだけではなくSafariやTerminal, TimeMachineなども設定できる。
それと、GUIではできない設定、例えば ~/Library を表示させたり、Dashboardを無効化したりするのも含めて何入れてもいいので、じっくり自分の.osxを作ると良い。とりあえず今のところ、こんな感じの簡単な設定を入れて、dotfilesの仲間に加えた。
dotfiles/.osx at master · lowply/dotfiles · GitHub
# # ~/.osx # # disable dashboard defaults write com.apple.dashboard mcx-disabled -boolean YES # I like overlay scrollbars defaults write NSGlobalDomain AppleShowScrollBars -string &amp;quot;WhenScrolling&amp;quot; # make ~/Library visible chflags nohidden ~/Library # # Killall Apps # for app in Finder Dock SystemUIServer do killall &amp;quot;$app&amp;quot; &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 done  NEXTSTEP/OSXのこういうところが本当にすごいと思う。</description>
    </item>
    
    <item>
      <title>Mountain Lionをアーカイブインストールする</title>
      <link>https://lowply.github.io/blog/2012/07/how-to-archived-install-mountain-lion/</link>
      <pubDate>Fri, 27 Jul 2012 19:17:53 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/07/how-to-archived-install-mountain-lion/</guid>
      <description>山ライオンがリリースされて「クリーンインストールしよう」みたいな記事をチラホラ見かけるようになったから、個人的にいつもやってる「アーカイブインストール」について書こうと思う。
これは何かというと、HDDをフォーマットせず、旧システムを別フォルダに突っ込んでからインストールを行う方法。Leopardまでは「アーカイブしてインストール」というオプションとして存在していたのに、Snow Leopardからなくなった。
クリーンインストールのデメリット クリーンインストールはHDDをフォーマットするので、データが全部消える。そのため、通常は全データのバックアップを取ってから行う。けどこれが非常にめんどい。
例えば、iTunesやiPhotoなどの大きなデータがブートHDD上にある場合、HDDをフォーマットするクリーンインストールだと「データを外付けHDDに退避 → クリーンインストール → データを戻す」という作業が必要で、すごく時間がかかる。しかも、退避時にコピー忘れしたファイルはもう戻ってこない。
で、ちょっとターミナルを使えば、この「アーカイブしてインストール」を手動で行うことができる。
手順1 まずはお決まりのBoot USBを、ココらへんを参考にして適当に作り、そっから起動させる。ここでディスクユーティリティを使って起動ディスクのチェックなどをしてもいい。
手順2 メニューの「ユーティリティ」から「ターミナル」を起動する。この状態では最初からroot（なんでもできるスーパーユーザー）になっているので、ターミナル上で以下のコマンドを打つ。
$ cd /Volumes/Macintosh\ HD/ $ mkdir old_system $ mv * .* old_system  実行していることは単純で、メインの起動ディスクに移動 → ディレクトリを作成 → 全ファイルをそこに移動 という感じ。3行目はバッククォートとシングルクォーテーションの違いに気をつけてください。
手順3 あとはターミナルを終了して普通にインストールプロセスを開始。インストール後は起動ディスク直下にold_systemというフォルダができてるので、そこから不要なファイルを消したり、必要なデータを新システムに持ってきたりすればいい。
所感  Snow Leopardの頃からやってて今まで特に不具合はないですが、自己責任でおねがいします。特にrootでシェルに入るので慎重に。 Mountain Lionを使ってみて、一番嬉しかったのはMail.appのルールがiCloud経由で同期してくれること。あとiMessage便利すぎ。  3行目は最初 mv $(ls -A -I &#39;old_system&#39;) old_system とか考えてみたものの、DarwinにはGNU lsが入っていなくて -A も -I も使えなかったから普通にmvしてる。  141024 追記 Yosemiteがでましたね。ls -A が行けるようになったぽいので、@k_teru 氏の知見をもとに
$ cd /Volumes/Macintosh\ HD/ $ FILES=$(ls -A) &amp;amp;amp;&amp;amp;amp; mkdir old &amp;amp;amp;&amp;amp;amp; mv ${FILES} old  としてみてはどうかなと。</description>
    </item>
    
    <item>
      <title>NGワードを元にスパムメールを処理するprocmailレシピ</title>
      <link>https://lowply.github.io/blog/2012/07/block-spam-with-procmail/</link>
      <pubDate>Fri, 06 Jul 2012 14:13:46 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/07/block-spam-with-procmail/</guid>
      <description>久々に癖のある.procmailレシピを書いたのでメモ。
やりたいこと：NGワードファイルを参照して、SubjectかFromにマッチする単語があれば捨てる
NGWORD=$HOME/.ngwords :0 * ^Subject:\/.* * ? test -s $NGWORD * ? echo &amp;quot;$MATCH&amp;quot; | /usr/bin/nkf -wZ2 | /bin/sed &#39;s/[[:space:][:punct:]]//g&#39; | /bin/fgrep -iqf $NGWORD .Trash/ :0 E * ^From:\/.* * ? test -s $NGWORD * ? echo &amp;quot;$MATCH&amp;quot; | /usr/bin/nkf -wZ2 | /bin/sed &#39;s/[[:space:][:punct:]]//g&#39; | /bin/fgrep -iqf $NGWORD .Trash/  以下、一部解説。パイプ部分は一個ずつ書いた。
 * ^Subject:\/.* メールの件名を対象 * ? test -s $NGWORD .ngwordsファイルの存在確認 * ? echo &amp;quot;$MATCH&amp;quot; 対象（件名）をecho nkf -wZ2 iso-9022-jpの文字列をUTF-8にし（-w）全角スペースを半角スペース二つに変換（-Z2） /bin/sed &#39;s/[[:space:][:punct:]]//g&#39; 空白スペース([:space:]) と「!</description>
    </item>
    
    <item>
      <title>LTJ bukem - Melkweg x Logical Progression Live on Mixcloud.com</title>
      <link>https://lowply.github.io/blog/2012/05/ltj-bukem-melkweg-x-logical-progression-live-on-mixcloud-com/</link>
      <pubDate>Wed, 16 May 2012 02:08:52 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/05/ltj-bukem-melkweg-x-logical-progression-live-on-mixcloud-com/</guid>
      <description>ブケム+コンラッドの最新のミックス。アムステルダムのMelkwegっていうクラブでのライブ収録らしい。Logical Progression名義ということで全編にわたってJungle/Artcore。すばらしすぎる。</description>
    </item>
    
    <item>
      <title>ImageMagick 6.7 &#43; PECL::ImagickでlibWandエラー</title>
      <link>https://lowply.github.io/blog/2012/05/imagemagick67-imagick3-error/</link>
      <pubDate>Wed, 16 May 2012 02:01:05 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/05/imagemagick67-imagick3-error/</guid>
      <description>ImageMagick 6.7 + PECL::imagickのインストール | fixture.jpで書いた方法でImageMagickをセットアップしたサーバーで、こんなエラーが出るようになった。
$ php -v PHP Warning: PHP Startup: Unable to load dynamic library &#39;/usr/lib64/php/modules/imagick.so&#39; - libWand.so.10: cannot open shared object file: No such file or directory in Unknown on line 0 PHP 5.3.3 (cli) (built: Mar 30 2011 13:51:54) Copyright (c) 1997-2010 The PHP Group Zend Engine v2.3.0, Copyright (c) 1998-2010 Zend Technologies  libWandがないという。。。少ししか調べてないが、libWand.soはlibMagickWand.soって名前に変わった疑いあり。ちらほら見かけたsymlinkを/usr/lib以下に張る方法も効果なし。
ImageMagickとPECL::Imagickはそれぞれ
$ convert --version Version: ImageMagick 6.7.6-5 2012-04-16 Q16 http://www.imagemagick.org Copyright: Copyright (C) 1999-2012 ImageMagick Studio LLC Features: OpenMP $ pecl list Installed packages, channel pecl.</description>
    </item>
    
    <item>
      <title>新さくらのVPS &#43; CentOS 6.2 で最初にやったことメモ</title>
      <link>https://lowply.github.io/blog/2012/03/new-sakura-vps-cent62-getting-started/</link>
      <pubDate>Fri, 30 Mar 2012 04:32:47 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/03/new-sakura-vps-cent62-getting-started/</guid>
      <description>さくらのVPS v3 2Gプランを借りたので、最初にやったことをメモ。
環境確認 契約後メールで送られてきたパスワードでログイン。まずはrootパスワード変更。
$ passwd  3コア。
$ cat /proc/cpuinfo | grep &amp;quot;model name&amp;quot; model name : Intel(R) Xeon(R) CPU E5645 model name : Intel(R) Xeon(R) CPU E5645 model name : Intel(R) Xeon(R) CPU E5645  メモリ2GB。
$ cat /proc/meminfo | grep Mem MemTotal: 2054804 kB MemFree: 1482476 kB $ free -m total used free shared buffers cached Mem: 2006 558 1447 0 50 393 -/+ buffers/cache: 115 1891 Swap: 4031 0 4031  驚愕の200GB。ざっくり言うと / → 50GB /home → 150GB という割り当てっぽい。</description>
    </item>
    
    <item>
      <title>DeliciousからPinboardに引っ越した</title>
      <link>https://lowply.github.io/blog/2012/03/bye-delicious-hello-pinboard/</link>
      <pubDate>Sun, 18 Mar 2012 03:14:46 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/03/bye-delicious-hello-pinboard/</guid>
      <description>SBMにはずっとDeliciousを使ってたんだけど、Pinboardに乗り換えることにした。
Pinboard: social bookmarking for introverts
2010年の年末に、Yahoo!がDeliciousを閉鎖するっていう騒ぎがあって、その時に多くの人がPinboardに流れた。自分もその時にアカウントを作ったけど、2006年から6年以上使ってきたDeliciousに愛着もあってすぐに乗り換えたりはしなかった。
今回乗り換えたのは、せっかく1年前に買い手が見つかったにも関わらずこの1年で良い方向に進化しなかった（余計な機能が増えてスピードが遅くなった）っていうのと、いつかPinboardみたいなテイストのサービスを作りたいと思ってるから。
- Speed, speed, speed
- An information-dense user interface.
- An ad-free site with no third-party tracking.
- A way to save notes and other snippets of text as bookmarks.
- No length limits on descriptions.
- A way to quickly save and restore open tabs.
- Built-in integration with Instapaper.
- A fandom-friendly site.
- Built-in sync of links and favorites from multiple Twitter accounts.</description>
    </item>
    
    <item>
      <title>DELL筐体でCentOS6系のネットワークデバイス名をethXに戻して使う</title>
      <link>https://lowply.github.io/blog/2012/03/how-to-revert-dev-name-to-eth-on-centos6-dell-machine/</link>
      <pubDate>Fri, 16 Mar 2012 12:53:43 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/03/how-to-revert-dev-name-to-eth-on-centos6-dell-machine/</guid>
      <description>根幹部分の変更のせいで多方面での迷惑が予想されるRHEL6系OSのネットワークデバイス名問題、例えば「em1ではなくeth0を使いたい」という場合、下記のマニュアルが参考になる。注：DELLマシンの場合。
To disable the use of the new naming scheme, during installation (attended or automated), pass the kernel command line parameter biosdevname=0 on the boot command line. Consistent Network Device Naming in Linux [PDF]  上記の「カーネルコマンドラインパラメータに渡す」ということをPXE Boot環境で実行したかったので、pxelinux.cfg/defaultに
default CL6.2_64 label CL6.2_64 kernel vmlinuz append ks=http://[IPADDR]/CL6.2_64.cfg ksdevice=eth0 load initrd=initrd.img devfs=nomount biosdevname=0  と書いておいてPXE→起動すると何事も無かったかのようにeth0, eth1&amp;hellip;という感じで使えた。。。あまりないと思うけど稼働中のOSに対して設定する方法も書いてあるので、詳細はPDFの参照を。</description>
    </item>
    
    <item>
      <title>mod_rewriteで時間・期間指定のリダイレクト</title>
      <link>https://lowply.github.io/blog/2012/02/using-time-as-condition-of-mod_rewrite/</link>
      <pubDate>Wed, 29 Feb 2012 16:54:59 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/02/using-time-as-condition-of-mod_rewrite/</guid>
      <description>これは知らなかった。
TIME_YEAR
TIME_MON
TIME_DAY
TIME_HOUR
TIME_MIN
TIME_SEC
TIME_WDAY
TIME
mod_rewrite - Apache HTTP Server  RewriteCondにTIMEで始まる時間・期間指定変数があって、秒単位の細かい指定でURLのリライトができる。例えば午前3時から4時半の間は毎日バッチを走らせるのでメンテ画面に飛ばしたい、とかいう場合は
ErrorDocument 503 /maintenance.html RewriteEngine on RewriteCond %{REQUEST_URI} !/maintenance.html RewriteCond %{TIME_HOUR}%{TIME_MIN} &amp;gt; 0300 RewriteCond %{TIME_HOUR}%{TIME_MIN} &amp;lt; 0430 RewriteRule ^.*$ - [R=503,L]  とか書ける。[1]
今までcronで行なっていたサイトのオープン、クローズ、メンテなどなど、全部これでいいじゃん！なんというスイスアーミーナイフ。
ただ、詳細までまとめたドキュメントが見当たらず、いろいろ見た感じだと
 TIMEの後がそれぞれ年月日時分秒曜日のものは、その数字を返す（月は0-11になるので注意） TIME単体だと曜日以外をまとめた数字が返る 比較演算子 &amp;lt;, &amp;gt;, = を使って条件を作れる  こういうことらしい。
[1] メンテ画面を503で出すのも勉強になった。via mod_rewrite (.htaccess) で簡単メンテナンスモード @ php-tips
see also
 Mod_Rewrite Variables Cheatsheet / TIME Advanced Techniques with mod_rewrite - Apache HTTP Server / Time-Dependent Rewriting mod_rewriteで期間指定のリダイレクト » gmt-24.</description>
    </item>
    
    <item>
      <title>iOS&#43;クラウド時代の写真共有ツールAdobe Revel</title>
      <link>https://lowply.github.io/blog/2012/02/revel-is-ios-and-cloud-generation-app/</link>
      <pubDate>Wed, 22 Feb 2012 23:27:24 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/02/revel-is-ios-and-cloud-generation-app/</guid>
      <description>Adobe Revelすごい。
Adobe® Revelは、iPad、iPhone、Macからフォトライブラリへのアクセスを提供するデジタルフォトソリューションです。容量制限の問題や手作業による同期の手間に煩わされることはありません。   定額無制限ストレージとかはさておき、個人的にすごいと思ったのはこの2つ。
Mac AppがiOS AppのUI OSから&amp;rdquo;Mac&amp;rdquo; の名が取れたMountain Lionといい、デスクトップの終わりが近いんだなあ、と。このUIはマウス／トラックパッドでは使いにくい。でも逆にそれが象徴的。デスクトップアプリの扱いがこの程度ということは、そういうことだ。
実ファイルはクラウド上 写真を右クリックして、良くある「Finderに表示」をやろうと思っても、できない。Adobeのサーバー上の画像データが実ファイル扱いだから。ローカルにはキャッシュのみ。この感覚はiPhoto/ApertureにとってのPhoto Streamとは別世界だ。バックアップどうすればいいのか少し気になるけど。
iPad3がRetina Displayになるっぽいのでなおさら期待。
See Also : 2648-120211 Adobe Revelっていいかも: shiology</description>
    </item>
    
    <item>
      <title>ReverseProxy配下でWordPressを動作させる</title>
      <link>https://lowply.github.io/blog/2012/02/how-to-work-wordpress-with-reverse-proxy/</link>
      <pubDate>Wed, 22 Feb 2012 00:04:31 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/02/how-to-work-wordpress-with-reverse-proxy/</guid>
      <description>環境 # uname -orm 2.6.9-67.ELsmp i686 GNU/Linux # cat /etc/issue CentOS release 4.9 (Final) Kernel \r on an \m NOTICE: Support for CentOS 4 ends on Feb 29th, 2012 # php -v PHP 5.1.6 (cli) (built: Jul 31 2008 00:08:07) Copyright (c) 1997-2006 The PHP Group Zend Engine v2.1.0, Copyright (c) 1998-2006 Zend Technologies  WordPress3.3.1を入れたい = php5.3以上が必須。ということで更新がおそーいレポジトリを使ってるredhat系OSにとっては悩ましいところですね。特にCentOS4系。まあ、そもそも稼働中のシステムなのでphpのアップデートは避けたいという環境。
しょうがないので、Apache(2.2.22) + PHP(5.3.10)をソースから入れて、8080とかで上げてリバースプロキシで特定のリクエストを飛ばすことにした。具体的には
http://www.example.com/blog/ ---&amp;gt; http://www.example.com:8080/  ということがしたい。（コンパイル周りも少し手こずったのでそのうち書く）
リバースプロキシ インストールできたら、VHなどなどを設定して8080とかのポートで上げる。WordPressもDocumentRootにDLして解凍しておく。ログにエラーが出ていないかなど、いろいろ確認して問題なければブラウザから接続。
http://www.example.com:8080/  これをhttp://www.</description>
    </item>
    
    <item>
      <title>neobundleでvimプラグイン管理</title>
      <link>https://lowply.github.io/blog/2012/02/switching-to-neobundle/</link>
      <pubDate>Fri, 17 Feb 2012 23:25:47 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/02/switching-to-neobundle/</guid>
      <description>vundleとgithub vundleでvimプラグイン管理を書いた後、git cloneするときに困ったことがあった。
 vundleをsubmoduleとして導入する vundleでインストールしたvimプラグインたちは.vim/bundle内に入る その状態でgit commit -&amp;gt; git pushする .vim/bundle/以下のファイルがgithub上に上がる 他の環境でgit pullすると、vundle以外のプラグインはsubmodule扱いにならない .gitmodulesにもvundle以外のプラグインの記述はされない  特にこれでも支障はないんだけど、なんか気持ち悪いので、.vim/bundle以下に.gitignoreを置いて、vundle以外はgithub管理から外した。vimプラグインはvundleに任せる感じ。面倒だけどgit cloneしたら、最初にviを開いて:BundleInstallを実行する必要がある。入れたいプラグインは.vimrcに書いてあるからいきなり実行してもOK。しかし、dotfilesをgithubで管理してて、同時にvimプラグイン管理ツールを使う時って何がベストなんだろう？
neobundle それとは別の経緯で、いろいろ調べてる時に知ったのがneobundle。neocomplcacheとかunite.vimの作者のShougo氏がvundleをリメイクし、昨年9月にリリースされたもの。一番のポイントは、「unite.vimインターフェイスの実装」とのことで、とても良さそうだったので切り替えてみた。
Hack #238: neobundle.vim で plugin をモダンに管理する
依存関係とかもあって、今の.vimrcのNeoBundle部分はこんな感じになった。
NeoBundle &#39;Shougo/neobundle.vim&#39; NeoBundle &#39;Shougo/vimproc&#39; NeoBundle &#39;Shougo/vimshell&#39; NeoBundle &#39;Shougo/unite.vim&#39; NeoBundle &#39;Shougo/neocomplcache&#39; NeoBundle &#39;tomasr/molokai&#39;  unite.vimも勉強したいなー。</description>
    </item>
    
    <item>
      <title>ImageMagick 6.7 &#43; PECL::imagickのインストール</title>
      <link>https://lowply.github.io/blog/2012/02/how-to-install-pecl-imagick-with-latest-imagemagick/</link>
      <pubDate>Thu, 16 Feb 2012 20:18:14 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/02/how-to-install-pecl-imagick-with-latest-imagemagick/</guid>
      <description>ImageMagick 6.6 系のときはこんなことなかった気がするんだけど、 PECL::imagick のインストールがこける。こちらの記事を見つつも、微妙に環境が違うし、 /usr/bin/php-config とか編集したくないし、何か別の方法があるはずと思って探ってみた。
 [PHP]Imagickのインストールエラーの対処法 - DQNEO起業日記 PHP 拡張モジュールImagickの導入時に遭遇したPECLのバグの回避策など - r_nobuホームページ   とりあえず現状
$ uname -orm 2.6.18-238.el5 x86_64 GNU/Linux $ cat /etc/issue CentOS release 5.7 (Final) Kernel \r on an \m  ここから最新のsrcをDL。ImageMagick: Downloads
$ cd /usr/local/src/ $ wget ftp://ftp.kddlabs.co.jp/graphics/ImageMagick/ImageMagick-6.7.5-6.tar.bz2 $ tar vxjf ImageMagick-6.7.5-6.tar.bz2 $ cd ImageMagick-6.7.5-6 - perlで使うかもしれないので $ ./configure --prefix=/usr/local/ImageMagick --with-perl $ make &amp;amp;&amp;amp; make install $ cd /usr/local/bin $ ln -s /usr/local/ImageMagick/bin/* .</description>
    </item>
    
    <item>
      <title>vundleでvimプラグイン管理</title>
      <link>https://lowply.github.io/blog/2012/02/manage-vim-plugin-with-vundle/</link>
      <pubDate>Sun, 12 Feb 2012 06:39:26 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/02/manage-vim-plugin-with-vundle/</guid>
      <description>調べれば調べるほど、vundleが良いと聞くので試してみたら本当に良かった。
gmarik/vundle - GitHub
120217 追記：結局neobundleにしました。
個人的には
 ~/.vim/bundle 内にまとまってくれる 使うときは~/.vimrcに1行書くだけ。GitHubで公開されてるものはパスを書く GitHubで公開されているものは自動的にsubmoduleになってくれる vi画面内で管理できる。:BundleInstall! で自動アップデートやばい  dotfilesをGitHubで管理しているので、submoduleとしてインストール。
$ cd ~/dotfiles $ git submodule add https://github.com/gmarik/vundle.git .vim/bundle/vundle  こんな感じでbundleディレクトリ内に置いてvundle自体をvundleで管理できます。
参考サイト：
 Hack #215: Vundle で plugin をモダンに管理する Vundle入れたら、Vimのプラグイン管理が楽になった Vimプラグインの管理をVundleにしてみた  </description>
    </item>
    
    <item>
      <title>DotfilesをGitHubで管理する</title>
      <link>https://lowply.github.io/blog/2012/02/how-to-manage-dotfiles-on-github/</link>
      <pubDate>Tue, 07 Feb 2012 04:13:14 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2012/02/how-to-manage-dotfiles-on-github/</guid>
      <description>最後の更新が1年以上前とは。。。気を取り直して、WordPressのバージョンも最新版に上げ、Nilminiという良いThemeも見つけ、技術メインで再びいろいろ発信しようということで更新してみます。
最初はライトなものから。メインのテキストエディタをJeditからMacVimへ移行しようか検討していて、その過程で.vimrcを複数環境で同期するためにGitHub（github.com/lowply）を使い始めました。その時のメモ。
vim本体 まずvim用の.vimrc、MacVim用の.gvimrc。それから、プラグインをpathogenで管理することにしたので.vimディレクトリを。プラグイン管理にvundleも使ってみたけど複雑になりすぎるので好きじゃないです。使いこなせてないだけなのかもしれないけど。
2012/2/12 追記：vundleをしっかり調べてみたらかなり良かったので使い始めました。すごいですこれ。
pathogenでの管理をやめるので、autoload、bundle/ をrmではなくgit rmで削除しておきました。
カラースキーマ Color Schemeには史上最も洗練された（と思っている）SOLARIZEDを一度検討したものの、紺背景に馴染めず、vim.orgで高ランキングを叩き出しているmolokai.vimを選択。派手な感じで良いです。もともとTextMate用のMonokaiっていうのがベースらしいです。
ターミナル インフラエンジニアという仕事柄、tmuxがなくては仕事にならないので.tmux.confも。LionからTerminalが256color対応したので、ステータスバーをカラフルにしてます。screenは使ってません。
ちなみにコンソール上の色出力は256colors2.plが有名ですけど、tmuxのcolour numberをつけたバージョンを作成している方を発見。かなりテンション上がりました。256 colors with tmux&amp;rsquo;s colour numbers. - What&amp;rsquo;s Goin&amp;rsquo; On Out There? 実際に、これで色合わせしました。
それから、Terminal.appのオリジナルテーマをFixture.terminalとして書き出して追加。これは単なるxmlで、Mac上でダブルクリックすればインポートできる形式になってます。便利。
githubに置く 全体的な管理方法としては、~/dotfilesというディレクトリを作り、その中をgitリポジトリとして、~/.vimrcなどはシンボリックリンクにする方法にしました。いろんな人のdotfileを見てると、どうもこれが一般的らしい。
~/ ├── dotfiles │ ├── Fixture.terminal │ ├── .git │ ├── .gitignore │ ├── .gvimrc │ ├── README.md │ ├── symlink.sh │ ├── .tmux.conf │ ├── .vim │ └── .vimrc ├── .gvimrc -&amp;amp;gt; /root/dotfiles/.gvimrc ├── .tmux.conf -&amp;amp;gt; /root/dotfiles/.tmux.conf ├── .</description>
    </item>
    
    <item>
      <title>LTJ Bukem on The Radio 1 Drum &amp; Bass Show with Fabio</title>
      <link>https://lowply.github.io/blog/2008/02/ltj-bukem-on-the-radio-1-drum-bass-show-with-fabio/</link>
      <pubDate>Tue, 26 Feb 2008 03:11:49 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2008/02/ltj-bukem-on-the-radio-1-drum-bass-show-with-fabio/</guid>
      <description>Facebook上でアナウンスされてたBukemの最新Mix、やっと登場。今回はRadio1から。
The Radio 1 Drum &amp;amp; Bass Show with Fabio
Tracklistingはココ。　Soh Cah Toa、出るかな？ あと、意外なことにPirate Bayでトレントも発見。177kbpsのmp3です。ピアも多くて速度出てる感じ。探してみて下さい。</description>
    </item>
    
    <item>
      <title>Goodby Benjamin</title>
      <link>https://lowply.github.io/blog/2007/12/goodby-benjamin/</link>
      <pubDate>Wed, 19 Dec 2007 04:53:03 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/12/goodby-benjamin/</guid>
      <description>LOST Season4 Official</description>
    </item>
    
    <item>
      <title>Yahoo! UI CSSが2.3になってパーフェクトになりました</title>
      <link>https://lowply.github.io/blog/2007/11/yahoo-ui-css-comes-perfect/</link>
      <pubDate>Thu, 15 Nov 2007 19:54:43 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/11/yahoo-ui-css-comes-perfect/</guid>
      <description>いつの間にかYahoo UIが 2.3.0にバージョンアップしていて、CSSシリーズも今までで一番たくさんのアップデートが行われた模様。 その中で特に嬉しかったのがFonts CSSの以下のアップデート。
* Updated %-to-px conversion charted for increased accuracy across browsers
* Move body line-height away from * wildcard selector. Now it is part of the initial BODY rule set.
* Changed core lineheight from 1.22em to 1.231 (no units)
* Changed code,pre to not use font-property shorthand syntax
* Tweaked the sizing fix for monospace font size (pre,code...)
* Added &#34;kbd,samp,tt&#34; as new selectors for monospaced font stuff</description>
    </item>
    
    <item>
      <title>Appleサイトに見るグローバルメニューの画像置換手法</title>
      <link>https://lowply.github.io/blog/2007/08/how-apple-uses-css-ir-on-their-globalmenu/</link>
      <pubDate>Sat, 11 Aug 2007 01:19:56 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/08/how-apple-uses-css-ir-on-their-globalmenu/</guid>
      <description>ここ2年ぐらいで、Appleのサイトは積極的にCSSとかAJAXとか新しい技術を採り入れ始めていて、最近はCSS関連のイベントで「AppleサイトのCSSを解析する」みたいなスピーチをされた方もいるらしく、サイトの存在自体がおもしろくなってきたと思う。特に個人的にスゴイと思うのは、全体一発リニューアル！とかやらずに「少しづつ、かつ抜け目なく」新しい技術をサイトに注入して、まるで生物が進化するかのようなアップデートをしているところ。一発リニューアル！が難しい大企業系サイトとして、ここまで柔軟かつデザインドリブンな運営方法は学ぶべきところが大きいと思う。
とはいってもAppleではiPhone登場時、アップルジャパンでは新iMac登場時に、10年近く使い続けたタブデザインを新しくし、珍しく全ページに渡る更新を敢行。早速Firebugなんかで構造をチェックしていると、グローバルメニューの画像置換に、あまり見ないCSS指定を使っているのを発見。
基本的には、li要素の中にa要素、liをdisplay:inline; にして横並びにする方法なんだけど、内部のa要素に
#globalheader #globalnav li a { float: left; width: 117px; height: 0; padding-top: 38px; overflow: hidden; }  みたいな指定をしてる。
まあ見てしまえば簡単だけど、なぜ今まで思いつかなかったんだろうと自戒。この手法は結構一般的なのかな？「height:0;」を思いつくかどうかが肝なんだな、きっと。。。
text-indentに大きなマイナス値を入れる方法だと、firefoxなどでクリック時にその大きさの点線が出現する（本当はa要素にoutline属性を使うか、onfocus=&amp;ldquo;this.blur();&amp;rdquo; と書けば消えるんだけど、横に2000pxとかずれてるのを想像するとなんか気持ち悪い）し、span要素などを入れ子にしてdisplay:none;する方法だとHTMLに視覚要素を一つ増やしてしまう。ということで、Apple様大変勉強になりました。</description>
    </item>
    
    <item>
      <title>New Order / Temptation Live</title>
      <link>https://lowply.github.io/blog/2007/08/new-order-temptation-live/</link>
      <pubDate>Fri, 03 Aug 2007 23:28:45 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/08/new-order-temptation-live/</guid>
      <description>&amp;ldquo;Temptation&amp;rdquo; は歌詞も曲も前から大好きだったんですが、1984年のBBCで放送されたライブ映像を発見。この頃のシンセの音とか、短パンとか、テロップとかなんかすごく新鮮。</description>
    </item>
    
    <item>
      <title>アスパラガスというタグをつけられた</title>
      <link>https://lowply.github.io/blog/2007/05/i-tagged-as-asparagus/</link>
      <pubDate>Wed, 16 May 2007 17:19:12 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/05/i-tagged-as-asparagus/</guid>
      <description>この前書いた「活版再生展フォトレポート」ってエントリーに、さっそくはてブを1件もらった。
嬉しかったのでこのエントリーにどんなタグ付けがされてるのか見てみたら、「DTP」とか「イラストレーター」みたいな想定できるタグの中に混ざって、「アスパラガス」ってタグがあって目が飛び出そうになった。
展示作品の中に「活版印刷された一言レシピを持って帰れる」って作品があって、一枚引いたら「アスパラガスのかにあんかけ」だったから写真を撮って掲載してたからだと思うんだけど、絶妙なタギングだと思う。
世の中に「アスパラガス」ってタグをつけられたエントリーがどんだけあるのか気になったのでここに貼っておきます。
キーワード「アスパラガス」を含む注目エントリー - はてなブックマーク</description>
    </item>
    
    <item>
      <title>Oceanic 815便が発見された模様</title>
      <link>https://lowply.github.io/blog/2007/05/oceanic-815-is-found/</link>
      <pubDate>Tue, 15 May 2007 02:10:09 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/05/oceanic-815-is-found/</guid>
      <description>lost - found Oceanic 815</description>
    </item>
    
    <item>
      <title>clearfixよりoverflowの方が良い理由</title>
      <link>https://lowply.github.io/blog/2007/02/why-overflow-is-better-than-clearfix/</link>
      <pubDate>Wed, 14 Feb 2007 04:43:38 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/02/why-overflow-is-better-than-clearfix/</guid>
      <description>雑誌にも登場していたし、最近ブーム？のclearfixというCSSハック。clearfixっていうのは最初の人が考えた単なるクラス名なので変えてもいいんですが、肝心なのは中身。どういうものかというと、
.clearfix:after { content: &amp;amp;quot;.&amp;amp;quot;; display: block; height: 0; clear: both; visibility: hidden; } .clearfix {display: inline-table;} /* Hides from IE-mac */ * html .clearfix {height: 1%;} .clearfix {display: block;} /* End hide from IE-mac */  みたいなハックだらけの長いCSSを書いて、フロートさせている要素のみを内包した要素に適用して、HTMLに一切変更を加えずclearと同様の効果を得るというもの。詳細はclearfixでGoogle検索すればいろいろわかります。 で、これと同じ効果は
overflow:hidden;  で再現できるので、僕はいつもこちらを使ってwrapperとか名前付けたdivの高さを確保しています。（Mac IEは検証すらせず無視しています）
clearfixはハックだらけな上に、要素にクラス名をひとつ増やさなきゃいけないので。。。一方、overflow:hidden; を使う場合、完全にMac IEとNetscape7の表示はあきらめなきゃいけないんですが、いまどきそんなものは無視！というスタンスの場合、おすすめです。というより、そういうスタンス自体がおすすめです。 さらに、overflow:hidden; は、モダンブラウザで要素A内にある要素Bのmargin-topが要素Aのmargin-topになってしまう表示（仕様？）や、IE6でdivがある一定以下の高さになってくれないときなどにも使えます。正しい使い方なのか不明ですが。。。　このへんの詳細についてはまたいつか書きたいと思ってます。</description>
    </item>
    
    <item>
      <title>LOST : 16 NEW EPISODES</title>
      <link>https://lowply.github.io/blog/2007/01/lost-16-new-episodes/</link>
      <pubDate>Sat, 20 Jan 2007 02:03:57 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/01/lost-16-new-episodes/</guid>
      <description>USで2/7スタートのLOST SEASAON 3エピソード7以降ですが、ABCではプロモが放送されている様子。
  
ジャックのタトゥーには意味が？ジャック・バウアーとの共演の噂は本当？ジャックがキスした相手は誰か？SEASON4で全ストーリーが完結するって噂は？・・・・相変わらず謎だらけです。</description>
    </item>
    
    <item>
      <title>ビル・ヴィオラ – 《クロッシング, The Crossing(1996)》 自己消滅の表現</title>
      <link>https://lowply.github.io/blog/2007/01/bill-viola-the-crossing/</link>
      <pubDate>Wed, 10 Jan 2007 03:57:33 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/01/bill-viola-the-crossing/</guid>
      <description>The Crossing 「ビル・ヴィオラ：　はつゆめ」展へ。全体的にとても美しく、迫力があり、ストレートに訴えかけてくる印象で、一発でヴィオラファンになってしまいました。いろんなところで感想が書かれていますが、個人的に最も深く焼きついてしまった「The Crossing」について。
暗い室内、高さ4メートル近い巨大な一枚のスクリーン、それを取り囲む大勢の人々、そしてスピーカーからのノイズ音。いままでに味わったことのない種類の、緊迫した空気。スクリーンに映る男がゆっくり歩きながら近づいてきて、初めて映像がスローモーションであることがわかる。アップになるにしたがって室内の緊張感も大きくなり、観客はこれから起ころうとしていることに注目する。男が立ち止まり一瞬の沈黙の後、足元には蝋燭を燈したような小さな炎が。
もちろん実際に人間を燃やしているわけではなく合成した映像なんですが、とてもリアルに作られています。しかし、そんなことを気にする余裕もないほどに映像が迫ってきて、スクリーンから目を離すことができません。
映像だけでなく、展示室に響く轟音、スクリーンを囲む観客の息遣い、炎/水が激しくなるにつれて、「反対側」を見ようと移動する人々、映像に比例してにわかに慌しくなる展示室内の雰囲気・・・全て含めて、ヴィデオ・アートとして捉えても良いのかもしれないです。
自己消滅 作品に対するキャプションは「自己消滅こそが超越と解放の唯一の手段である」というような内容の文で締められていて、作品の意図が少し読めた気がしました。つまり、激しい炎/水の中で突然消える男は自己のイメージであり、この炎や水の激しさは自己消滅に必要なエネルギーの莫大さの表れであることは明白です。人間のエゴや欲望がいかに強いものであるか、という仏教的な観念を持つアートとも解釈できるし、男＝自己の背景の「闇」は、仏教思想でいうところの「無」の観念と重なります。さらに、表裏一体となったスクリーン、下から燃え盛る炎と上から流れ落ちる水などの対比は万物の二面性、そして仏教の「中道」精神を反映しているように思えました。
ヴィオラ自身、日本の文化には大きな影響を受けたと語っていて、それは、ある角度で作品にも表れているようです。また、どちらかというと外に外にメッセージを投げかけ問題提起するタイプというより、個人的な体験や自己との対話などをテーマにした作品が多く、内に向かっていく感覚を受けました。きっとその中で、ヴィオラ独特の人間の「感情」を追求するスタイルが確立されていったのではないでしょうか。ヴィオラが「時間が2倍になれば込められた感情も2倍になるから、スローモーションを多用するのだ」と語っていたのを後から読んで、The Crossingで感じた異常な緊張感の理由も掴めた気がします。
あの場でなければ感じることのできない貴重な体験、最終日に間に合って良かったです。
ビル・ヴィオラ：　はつゆめ - Mori Art Museum</description>
    </item>
    
    <item>
      <title>tagometer雑感</title>
      <link>https://lowply.github.io/blog/2007/01/think-tagometer/</link>
      <pubDate>Thu, 04 Jan 2007 23:10:20 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2007/01/think-tagometer/</guid>
      <description>とっくに年も明けてしまいましたが、あけましておめでとうございます。12月はいろいろ楽しいことも忙しいこともあり、すっかり更新をほったらかしてました。
さて、ずっとやりたかった&amp;quot;tagometer&amp;quot;をつけてみたのでまとめ。
■ http://del.icio.us/help/tagometer
■ はてなブックマーク - ヘルプ - 自分のブログに「○○users」を表示
delicious派なのですが、日本でははてブが一番メジャーなので両刀使いです。
設置はエントリー・アーカイブに上記からコピペしたソースを貼り付けただけ。簡単すぎて半信半疑だったのですが、あっさりと動きました。ただ、僕の場合は一箇所CSSを書き直さなきゃいけなかったんですが、これは設置するブログによってさまざまでしょう。
被ブクマ数が多いのはやっぱり、このブログで唯一のビッグ・エントリー「Googleカレンダーを携帯で見る方法：補足」ですが、そのほかにもごくたまーにブクマされていてうれしいです。特に検索プラグインなどの自作もののエントリーとか、なんかの使用法とか、なんか役立ってる感があります。というか役に立たないエントリーはブクマされませんよね普通。そんなわけで2007年もよろしくおねがいいたします。</description>
    </item>
    
    <item>
      <title>YUI Library CSS toolsがバージョンアップ</title>
      <link>https://lowply.github.io/blog/2006/12/yui-library-css-tools-update/</link>
      <pubDate>Fri, 08 Dec 2006 03:50:47 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/12/yui-library-css-tools-update/</guid>
      <description>Yahoo UI Libraryが 0.12.0にバージョンアップしてCSS関連も若干修正された様子。
CSS Reset  hn要素にfont-weight:normal;が追加 abbr,acronym要素に border:0;が追加  CSS Fonts  font:x- と smallの間の不要な改行の修正  CSS Grid  大幅に変更  その他  CSS reset-fonts-grids というお手軽3パックが追加。  という感じで、まあ良くなってます。ただ個人的には以前から、Fontsの一番最後、
body * {line-height:1.22em;}  という指定が理解できません。line-heightは単位なし指定が基本じゃなかったっけ。。。しかも全称セレクタを使われると継承がうまく効かなくて厄介なんですが。。。　というわけでここだけ
body {line-height:1.5;}  とかにして使っています。詳細なドキュメントがほしいところ。
Yahoo! User Interface Library</description>
    </item>
    
    <item>
      <title>1 week of art 使用曲</title>
      <link>https://lowply.github.io/blog/2006/12/one-week-of-art-tracklist/</link>
      <pubDate>Fri, 08 Dec 2006 03:10:44 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/12/one-week-of-art-tracklist/</guid>
      <description>輪派絵師団によるパフォーミング・アート1 week of artですが、DailymotionからYouTubeへ流れ、100万ビューの大台に乗ったということ。
彼らは輪派というチームの中のグラフィックアート部門ってことで精力的に活動中らしく、クリスマスイブには大黒パーキングエリアでのライブペインティングが予定されてます。その他の作品や活動も、サイトにてチェック可能。
rinpaeshidan.jp
アメリカのTV局で特集されたり、YouTubeでのコメントも2000を超えてるようです。ムービーで使われてる曲が気になる方も多いと思うのでメモ。
 Nujabes - Music Is Mine (Modal Soul) Hifana - Wamono (CHANNEL H) Jazztronik - VERDADES (CANNIBAL ROCK)  </description>
    </item>
    
    <item>
      <title>ほとんどのブラウザで背景の半透明化を可能にするCSS指定</title>
      <link>https://lowply.github.io/blog/2006/11/css-to-enable-bg-transparent-for-almost-browsers/</link>
      <pubDate>Wed, 29 Nov 2006 04:06:45 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/11/css-to-enable-bg-transparent-for-almost-browsers/</guid>
      <description>hoge
2012/2/22 追記：未だに結構アクセスあるのですが、2006年11月の記事になります。2012年現在はもっと良いソリューションがあるはずなので、それを踏まえて参考にして頂ければと思います。リンクとか切れてるし。
前回のおさらい：
#TB_overlay { position: absolute; z-index:100; top: 0px; left: 0px; background-color:#000; **filter:alpha(opacity=60); -moz-opacity: 0.6; opacity: 0.6;** }  thickbox.css ですが、
 IE独自拡張CSSのfilter:alpha（正式にはActiveXらしい via filter:alphaで大ハマり）を最初に指定 mozilla系独自プロパティ-moz-opacityで透明度を指定 CSS3ドラフト段階のもまで先行実装していて最も正確にCSSをレンダリングするOperaとSafariに向けてopacityプロパティを指定  これで世の中の99%ぐらいのブラウザ上で、半透明効果をかけられるんじゃないでしょうか。肝心なのは指定の順番かな？Validではない順に記述していくことで、長期的に使えるように。
と思ったら、結構知られているテクニックなんですね。。
IE・Firefox・Opera・Netscape・Safariで表示可能な半透明CSS/Opacityテクニック - WEBデザイン　BLOG
ネタ元では3ページに渡って詳細に実験しています。
Exploring Opacity - Mandarin Design
こちらを読むと、Firefoxではopacityプロパティを認識するようになったらしく、-moz-opacityは後方互換性のために残してあるだけのようです。
おまけ
CSS3はこうなる - GIGAZINE</description>
    </item>
    
    <item>
      <title>SWFObjectのgetSWFHTML() というメソッドが全く知られてない件</title>
      <link>https://lowply.github.io/blog/2006/11/does-anybody-knows-about-getswfhtml-of-swfobject/</link>
      <pubDate>Mon, 27 Nov 2006 00:42:06 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/11/does-anybody-knows-about-getswfhtml-of-swfobject/</guid>
      <description>全ウェブデザイナー・フラッシャー必携といっても過言ではないSWFコンテンツ埋め込みライブラリ「SWFObject」ですが、更に便利に記述する方法が紹介されているエントリーを発見したのでまとめ。
まず、SWFObjectの利点：
 IEのActive Content Update 問題に対応済み XHTML Validな記述ができる Flashプラグインのバージョン検出が可能 Macromedia Flashがデフォルトで吐き出すタグよりシンプル  それで、欠点は一つもないです。Adobeのサイトでも使用されている様子。というかそれならAdobeはAC_RunActiveContentとかやってる場合じゃないんですけどね。。。
そして、発見したのは下記のエントリー。
BicRe: SWFObjectの便利なメソッド
本家SWFObjectドキュメントを日本語版に翻訳した超重要エントリー &amp;quot; SWFObjectのドキュメントを日本語に翻訳してみたよ&amp;quot; にも見当たらなかったんですが、SWFObjectにはgetSWFHTML()ってメソッドがあるらしく、以下
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var so = new SWFObject(&amp;quot;hoge.swf&amp;quot;, &amp;quot;text for movie&amp;quot;, &amp;quot;320&amp;quot;, &amp;quot;260&amp;quot;, &amp;quot;8&amp;quot;, &amp;quot;#FFFFFF&amp;quot;); document.write(so.getSWFHTML()); &amp;lt;/script&amp;gt;  と記述すれば一行で書けてしまいます、ということ。代替テキストを表示できなくなるというリスクはあるものの、divを少しでも減らしたい人、早く書きたい人、オススメです。これ、Googleで検索しても7件ぐらいしか出てこないんですが、どうしてなんでしょうかね？（海外だともう少し出てきます） また、setFlash() なる関数を作ってaddVariable()メソッドと組み合わせワザで、もっと便利なものも作ったりされてて感動。</description>
    </item>
    
    <item>
      <title>Brian Eno @ Apple Pro</title>
      <link>https://lowply.github.io/blog/2006/11/brian-eno-apple-pro/</link>
      <pubDate>Sun, 26 Nov 2006 23:57:46 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/11/brian-eno-apple-pro/</guid>
      <description>大注目のApple - Proに、 77 Million Paintings を発表して映像の世界へまた一歩本格的に足を踏み入れた御大Brian Enoがアップされています。
Apple - Pro - Profiles - Brian Eno, p. 1
EnoがRoxy Music時代からアンビエントへとシフトして行った時期、様々な音楽的実験を繰り返していて、その中に「一度ボタンを押したら、常に違う音楽を流し続ける機械を作りたい。いずれ将来は、昔の人って同じCDを何度も聴いていたの？　って言われるようになるかもしれない。」みたいなことを言っていたのが印象的だったんですが、下記
The multidisciplinary artist, with the help of a few technical experts, has created a computer program that continually fuses his translucent light paintings to create an ever-evolving artistic display on your computer screen. The piece is accompanied by a randomly assembled ambient track that’s never the same twice. Apple - Pro - Profiles - Brian Eno, p.</description>
    </item>
    
    <item>
      <title>Linotype Office Alliance</title>
      <link>https://lowply.github.io/blog/2006/11/linotype-office-alliance/</link>
      <pubDate>Sun, 26 Nov 2006 22:48:53 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/11/linotype-office-alliance/</guid>
      <description>先日、Helveticaの版権を持つLinotype社から、小林章氏デザインによるフォント &amp;quot;Linotype Office Alliance&amp;quot; が登場してます。
コンピューター社会におけるスクリーン（ディスプレイ）とプリンターでの使用に重点を置き、少し個性を加えたオフィス向けの4シリーズ構成と言うこと。とても美しいタイプフェイスです。特にセリフ系、この重厚でソフトな雰囲気はかなり使いたいですね。
Linotype Office Alliance
小林 章：タイポグラフィーの境界を超えて - PingMag
なんとブログ、かいてらっしゃるんですねー。知らなかった。。。
書体の話をまとめて - 小林章のドイツ日記</description>
    </item>
    
    <item>
      <title>タール砂漠で出会ったバラモン</title>
      <link>https://lowply.github.io/blog/2006/11/a-brahman-met-in-thar-desert/</link>
      <pubDate>Sun, 26 Nov 2006 22:23:51 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/11/a-brahman-met-in-thar-desert/</guid>
      <description>友人kimに注文していた写真がついに仕上がってきました。kimは今学校に通っていて、卒業制作の真っ最中で忙しい中、初仕事としてお願いしていた写真。
初めてkimの作品を見て、写真について話をしていた時、その眼の中に何か確信のようなものを感じてしまったので、ずっと写真を売ってほしかった。そして最初の打ち合わせから待つこと1ヶ月半、待った甲斐がありました。
インドとパキスタンの国境にある、タール砂漠で出会ったと言うバラモン（僧侶）。この目、表情、言葉では表現できない迫力と優しさにやられて、数百枚の中からこの写真に決定し、額のサイズに合わせてトリミングしてもらったものです。
サイズは写真で一番大きい「全紙」より更に大きい「大全紙」より、もっと大きい特注紙で。いずれ、素晴らしい写真家になるはず。楽しみです。</description>
    </item>
    
    <item>
      <title>tha社のサイトがリニューアル</title>
      <link>https://lowply.github.io/blog/2006/10/tha-site-renewaled/</link>
      <pubDate>Mon, 23 Oct 2006 11:57:45 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/10/tha-site-renewaled/</guid>
      <description>tha.jp
中村勇吾氏率いるtha社のサイトが、引越に合わせてリニューアルした模様。Google Maps APIをFlashで斜めにした上に、ムービー連動させたりしてます。
uniqlo NY sohoも美しさ・伝わりやすさ・動かす楽しさがパーフェクトに揃ってました。ムービーの最後にちらっとオフィスが写ってます。
 nisshi.yugop yugop作品の魅力 - miamoto.net  追記：10/23に、公開直後にGoogle Map八分になって撃沈との記事がアップされています。1日限定のサイトとなってしまいました。見ることができてよかったけど、残念です。fladdict氏作だったようです。</description>
    </item>
    
    <item>
      <title>ファンタジーナイトレース特集</title>
      <link>https://lowply.github.io/blog/2006/09/fantasy-night-race-special/</link>
      <pubDate>Fri, 29 Sep 2006 20:18:55 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/09/fantasy-night-race-special/</guid>
      <description>気づくの遅すぎですが9/13付けでついにハニカムもでっかくピスト特集してました。もう完全にブーム化したんだな、と実感。
 Let&amp;rsquo;s Skid The Night Together - ピストバイク・ムーブメントは「最後のストリートカルチャー」なのか - honeyee.com  てことで、「フ■ァンタジーナイトレース」の全貌が明らかに！！　T19ライダーや主宰者の大瀧氏、そして参加してる方たちのコメント付き。</description>
    </item>
    
    <item>
      <title>高橋ヒデキ氏＠Apple Store Ginza</title>
      <link>https://lowply.github.io/blog/2006/09/hideki-takahashi-on-apple-store-ginza/</link>
      <pubDate>Tue, 26 Sep 2006 03:03:40 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/09/hideki-takahashi-on-apple-store-ginza/</guid>
      <description>アクセス増の波が原因か「高橋ヒデキ氏＠Apple Pro」というエントリーに、なんと高橋ヒデキさんご本人様からコメントを頂きました。嬉しいです。 11/25追記：MTトラブル時にコメントが消えてしまったので、現在は残っていません。すみません。
10/24の18：30から、Apple Store銀座のインストアイベントにて講演されるということなので行こうと思っています。 インストアイベントの情報はApple Store Ginzaのイベントリスト10月第四週分で公開中。Commercial Photo誌の主催するマンスリーイベントのようです。
プロフェッショナル・フォトグラファーのための月刊誌「コマーシャル・フォト」主催によるマンスリーイベント。今月のゲストは、ビューティフォトの第一線で活躍するフォトグラファーの高橋ヒデキ氏。肌の質感やコスメティックの色彩を美しく表現した高品質なデジタルフォトをタイトなスケジュールの中で仕上げるための、効率的なスタジオワークを披露します。 from : アップル - 直営店 - Ginza  ドイツで開催されているPhotokina 2006ではApple Aperture 1.5も発表されたばかりで期待。はたしてデモで使われるのでしょうか。</description>
    </item>
    
    <item>
      <title>Googleカレンダーを携帯で見る方法：補足</title>
      <link>https://lowply.github.io/blog/2006/09/how-to-view-google-calendar-on-cellphone-complement/</link>
      <pubDate>Wed, 20 Sep 2006 13:37:08 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/09/how-to-view-google-calendar-on-cellphone-complement/</guid>
      <description>たたみラボ: Googleカレンダーを携帯で見る方法
で紹介されているGoogle Calendarの使い方がすごい！と思ったのですが、 カレンダーを公開にしなくても携帯から見ることができる方法を発見。
Gcalの設定画面で、携帯から見たいカレンダーの名前をクリックし、一番下に出てくる「Private Address:」の中の「HTML」ボタンをクリックします。（※参考画像） そして出てきたURLをクリック、移動後のカレンダーページの右上のタブから「Agenda」を選択。そのページのURLを携帯に送れば、見れます。
原理としては、「Calendar Address:」というのは公開しているカレンダーのための一元的なURLで、「Private Address:」の方はそこにランダムな文字列を付加して認証不要の参照ができるようにしたもの、ということかな。
This is the private address for this calendar. Don&#39;t share this address with others unless you want them to see all the events on this calendar.   設定項目の下には、上に引用したような記述もあるので、このURLは他人には公開しないことを前提として用意されているようです。また、リセットボタンを押すことによって任意のタイミングで文字列をランダムに変える手段を提供しているのがすごいです。 えーつまりまとめると、
http://www.google.com/calendar/embed?src=アカウント名%40gmail.com&amp;amp;pvttk=ランダムな文字列&amp;amp;mode=AGENDA
ということになります。スケジュールの参照だけなら特に認証する必要ない、というたたみラボの大井氏の意見にすごく賛成です。出先で「この日空いてる？」って聞かれたとき、単に見れれば良いわけですから。これはもう手放せないです。こういう手段もきっちり用意しているところが、やっぱりGoogleですね。
2007/05/25 追記
やっとというか、ついにというか、Google Calendarもモバイル版が正式に出ました。予定の追加ができるので、イイです。携帯電話から「calendar.google.com」へアクセスするだけですが、モバイル版にPCからでもアクセス可。</description>
    </item>
    
    <item>
      <title>Hand-Shaped Skateboards展 フォトレポート</title>
      <link>https://lowply.github.io/blog/2006/09/hand-shaped-skateboards-photo-report/</link>
      <pubDate>Sat, 16 Sep 2006 19:50:32 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/09/hand-shaped-skateboards-photo-report/</guid>
      <description>「Hand-Shaped Skateboards」展 2006年08月27日 〜 2006年09月10日
アーティスト： 平野太呂、伊藤洋、田中大輔、今里智彦、マイク・ミン、新倉孝雄、森本雑感、江川芳文、浦本譲、大滝ひろし、カツ秋山、西山徹、神山隆二、本間良二、YAK、野坂稔和、PUCCI、大場康司 ＆ CHIMA、ヒゴビシャス、KAMI、ウッド、SKATETHING
Website：http://www.geocities.jp/no12gallery/
 「Hand-Shaped Skateboards」展 - TOKYO ART BEAT THE SHOW OF HAND SHAPED SKATEBOARDS - honeyee.com NEWS  世界中で大量生産されては壊れ、捨てられる板をなんとか再利用できないだろうか。もう一度、使わなくなったその板を楽しむ事は出来ないだろうか。本展はその可能性と、スケートボーダーの創造性を提示するものである。思いの形に切りとられ、削り出された板には再びトラックとウィールがセッティングされ、展示される。 フライヤー  ということでこれは行かなければ、と思って行ってきました。
最初に行ったのは9月8日。入場無料の上撮影可ということだったので、10日に再訪。
No 12 という名前の由来が、ここに来ると分かります。となりの倉庫みたいな建物のシャッター番号が13で終わっているので、その続きってこと。
カラフルなZINEは500YEN。板のワイヤーフレームとアーティストのプロフィール。
テーマが「再生」なので、テーブルとイスもありました。足はプライウッドの産みの親イームズ風。
NIKE Skateboading がスポンサー。こちらは「再生」されていない感じで、これもまたクール。
ギャラリーに展示してある板は20枚。最終日には、飾ってある自分の板でギャラリーの前の道をすべってるアーティスト氏もいました。
そして何事もなかったかのように、滑り終わったら展示しなおしていました。
こちらは w)taps のTET氏の板。タコベル万歳。
TET氏のウィールはT19。なつかしいウィールです。
T19の大瀧氏の板・・・やばすぎる・・・
このサイドの曲線、近くで見るとすごくきれいです。表面のカッティングも同じく。
T19バーガーのステッカー。
テール部分のカッティング。発想がかっこよすぎです。
YOPPY氏の板は、シューレース付き。
SKATE THING氏の板はものすごいペイントです。
こんなトラック見たことない・・・　パーフェクト！！
という感じで、いたるところにT19の文字が見えるかなりステキなスケートボード展でした。大佐のお誘いがなければ知らないままでした・・・どうもありがとうございました。</description>
    </item>
    
    <item>
      <title>Happy Birthday del.icio.us</title>
      <link>https://lowply.github.io/blog/2006/09/happy-birthday-delicious/</link>
      <pubDate>Sat, 16 Sep 2006 19:07:47 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/09/happy-birthday-delicious/</guid>
      <description>大変お世話になっております del.icio.us が3歳に。このファミコン世代の心をくすぐるアイコンが良い感じ。これからもシンプルに、シンプルに、No ADのまま、進化して行って欲しいです。</description>
    </item>
    
    <item>
      <title>$関数とjQueryオブジェクトという哲学</title>
      <link>https://lowply.github.io/blog/2006/09/dollar-function-and-jquery-object/</link>
      <pubDate>Sat, 09 Sep 2006 02:20:44 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/09/dollar-function-and-jquery-object/</guid>
      <description>jQuery - New Wave Javascript
かなり今更感もありますが、jQueryの素晴らしさに気づいてしまったのでエントリー。
いろいろ調べると書いてありますが、jQueryとは、JavaScriptライブラリの元祖とも言われるprototype.jsを意識した上で、更にJavaScriptプログラミングをもっと楽しめるように、ってコンセプトで開発されました。ということです。
で、僕はJavaScriptとDOMの基礎をかじった程度の何も分からないに等しい人間だったのですが、テストページ作ってみると哲学がシンプルでビシバシ伝わってくる感じ。2分で外部HTMLロードのコードの書き方が理解できる。更にjQueryを使ってコードを書いているうちにJavaScriptに対する理解もどんどん深まっていって、ひとつの習得法として成立の予感。書籍より最初は実践ありきですね、なんでも。
ビジュアル表現は積極的に使うべきか微妙ですが、「$関数とjQueryオブジェクト」っていう概念、メソッドの連鎖、CSSへのアクセスでhashが使える、軽い、とかそこらへんがキーかな？
メソッドの内容は少なめでこれぐらいなら覚えられそうですが、一応　jQuery Map なんてprototypeチックなモノもあります。これは便利。そんで、Visual jQuery でこのマップが動く。あと以下のサイトがとりあえず国内最高のjQueryドキュメントになっているはずです。（英語の資料はたくさん出ています）
jQuery 開発者向けメモ
その他詳しいことは、GIGAZINEのエントリーを始めいろんなところで触れられているので略。 Google氏に聞いて下さい。</description>
    </item>
    
    <item>
      <title>Adobeが自社ブックマークをdel.icio.usで公開</title>
      <link>https://lowply.github.io/blog/2006/08/adobe-opens-bookmarks-on-delicious/</link>
      <pubDate>Thu, 24 Aug 2006 23:25:15 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/08/adobe-opens-bookmarks-on-delicious/</guid>
      <description>「はてなブックマークはバカ論争」がヒートアップしている日本のソーシャルブックマーク界ですが、米Adobeが自身のブックマークをdel.icio.usにて公開、という記事。
Adobe shares their del.icio.us links - lifehacker.com
こちらがadobeのdel.icio.us
del.icio.us/adobe
大企業がオフィシャルブログを持つことは常識になりつつありますが、ソーシャルブックマークを公開するというのは思いもつかなかった。これは新手のプロモーションになるかもしれないです。</description>
    </item>
    
    <item>
      <title>Google Ice Cream</title>
      <link>https://lowply.github.io/blog/2006/08/google-ice-cream/</link>
      <pubDate>Tue, 15 Aug 2006 01:29:55 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/08/google-ice-cream/</guid>
      <description>PizzaプログラムとかやってくれてるGoogleが、アイスクリームを出した。サンフランシスコで有名（らしい）IT&amp;rsquo;S IT Ice Cream とGoogleのコラボレーションGoogle Ice Creamは「The G本社 = マウンテンビュー」のカフェでのみ発売中。Cool！
I scream for (Google) ice cream - Google Blog</description>
    </item>
    
    <item>
      <title>LTJ Bukem feat. MC Conrad – Live @ Club Prive</title>
      <link>https://lowply.github.io/blog/2006/08/ltj-bukem-feat-mc-conrad-live-club-prive/</link>
      <pubDate>Wed, 02 Aug 2006 23:28:09 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/08/ltj-bukem-feat-mc-conrad-live-club-prive/</guid>
      <description>LTJ Bukem feat. MC Conrad - Live @ Club Prive [192] - 2006/07/20 - DNBforum.com
ロシア（たぶん）のクラブ &amp;quot;Prive&amp;quot;で7月20日に行われたライブの様子がロシアのラジオで放送され、それを録音したものが各所で出回り始めています。ラジオノイズがひどい部分もありますが、かなり良いミックスです。時間にして40分弱。
前回から思っていましたが、ブケムのスタイルはちょっと変わってきています。今回もソウルフルなものがほとんどない。個人的には今の選曲のほうが、Back to Classicsな感じでかなり好きです。
今回はいつも以上にトラックリストが判明していません。08&amp;quot;Organ Tune&amp;quot;は本当に素晴らしいですが、リリース前トラックで見るとM05のアーメントラックがやばすぎます。ベースラインも・・・これは誰の曲なのか・・・　それから、M09もクールです。
Tracklist
 ??? - ??? ??? - ??? Ray Keith - The future (Remix) ??? - ??? ??? - ??? Muffler - I Go ??? - ??? Greg Packer - Organ Tune ??? - ???  </description>
    </item>
    
    <item>
      <title>世界報道写真展2006</title>
      <link>https://lowply.github.io/blog/2006/07/world-press-photo-2006/</link>
      <pubDate>Mon, 17 Jul 2006 13:57:17 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/07/world-press-photo-2006/</guid>
      <description>フィンバー・オライリー（カナダ）ロイター通信「ニジェール南部のタウアにある臨時食料配給所を訪れた母子」《大賞》
世界報道写真展2006 - 東京都写真美術館
1955年、報道写真の重要性と報道の自由を世界的規模で広げるためにオランダで設立された「世界報道写真財団」は、毎年、プロの写真家が前年1年間に撮影した報道写真を対象にコンテストを開いています。選出については、事件、事故、紛争やスポーツなど10部門に分類し、それぞれ短写真、組写真の1位から3位までの入賞作品を決定。その中より入賞作品約200点を集めて世界50カ所以上を巡回しています。 TAB イベント - 世界報道写真展2006  報道写真が好きなのは、負の要素を直視することができるからです。テロ、戦争、貧困、災害、そこから溢れる怒り、哀しみ、恐怖。ショッキングだからこそ、目をそむけない姿勢が必要なのかな、と思います。7月30日まで、そして安いです。</description>
    </item>
    
    <item>
      <title>若冲と江戸絵画展</title>
      <link>https://lowply.github.io/blog/2006/07/jakuchu-and-edo-art-exhibition/</link>
      <pubDate>Mon, 17 Jul 2006 13:48:00 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/07/jakuchu-and-edo-art-exhibition/</guid>
      <description>若冲と江戸絵画展 - 東京国立博物館
世界的な若冲コレクター、ジョー・プライス氏のコレクションを展示。7月4日からやっていたのに、こないだ知りました。
伊藤若冲は江戸中期の画家。緻密で繊細な画風は、千点以上に及ぶ中国絵画の模写と、モチーフに対する異常なまでの観察力がベースです。上の鶏はあまりに有名ですが、これを描く際、本物の鶏を庭に放し、最初の一年間はひたすら観察しただけ、という逸話も。人生のすべてを投げ、生涯絵画とともに生きた人間の魂を、絵画を通じて感じることができます。8月27日まで。</description>
    </item>
    
    <item>
      <title>高橋ヒデキ氏＠Apple Pro</title>
      <link>https://lowply.github.io/blog/2006/07/hideki-takahashi-on-apple-pro/</link>
      <pubDate>Thu, 06 Jul 2006 23:00:13 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/07/hideki-takahashi-on-apple-pro/</guid>
      <description>Apple Pro/Photoに「高橋ヒデキ」が追加されていました。Webではなかなか氏の作品やインタビューを見る機会が無いので、ものすごい貴重な2ページ。作品は5点掲載されていて、どれも息をのむ美しさ。G5とディスプレイを持ち歩くこともある、というプロ意識にも敬服。
Apple Proはいつもピックアップが素晴らしいです。当然本家USサイトのApple Proも気になるわけですけど、やっぱりこっちは天才の宝庫。更新の頻度もハンパないです。→Livedoor Readerに追加したら、誰も購読していなくて1ゲット。</description>
    </item>
    
    <item>
      <title>Picasa Web Albumsスクリーンショットレビュー</title>
      <link>https://lowply.github.io/blog/2006/06/picasa-web-albums-screenshot-review/</link>
      <pubDate>Sat, 24 Jun 2006 15:54:43 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/06/picasa-web-albums-screenshot-review/</guid>
      <description>というわけで、届いたXiaostyleを使ってみました。
カメラ自体はとにかく使いにくいし安っぽいのでプロダクトとしてはダメですが、撮影した感じは期待通りのトイカメラ風味。壊さないように大事に使います。電池の持ち悪いです。エネループ必須。 ちょっと前に、先日テスト公開されたGoogleのオンラインアルバムサービスPicasa Web Albumsのインビテーションも届いて、いろいろ試したのでレビュー。表計算とかよりもやってほしかったサービスだったのですが、やってくれてます。
 無料ストレージが250MB 年間25ドルで6GBまで拡張できる（米国のみ） RSSフィード機能 Picasaから一発アップロード  と期待以上。
対抗馬はiPhoto+.Macなのかもしれませんが、メールにしても何にしてもGoogleの場合全てフリーだし、使いやすさも上回る感じです。
スクリーンショット（写真は全てXiaostyle TDG-501）
写真を表示した状態。キーボードの←→で写真移動ができる。
ドラッグアンドドロップで、アルバムのサムネイルの並び替えができる。
アルバムを表示した状態。http://picasaweb.google.com/アカウント名/アルバム名/ と、アルバムごとにURLを持つので、相手を決めて公開できる。
Picasaがなくてもアップロードは可能。ISO、絞りなどEXIF情報も同時にアップ（時刻表示は確認できず）。この画面で、現在の使用量を現すバーを確認できる。
スライドショー。escキーでライブラリに戻る。Picasa側で画質を3段階から選べるが、一番大きいものでないと少し画質が悪い。写真はすべてプログレッシブJPGのような動作をする工夫がされている。
アルバムへのインビテーションメールを送れる。もちろん、自分のGmailアカウントのアドレス帳からオートコンプリート可能。
Flickrほどソーシャルな感じではないのですが、あえて差別化を図っている印象もあります。早く6GBサービスが日本で始まって欲しいです。</description>
    </item>
    
    <item>
      <title>CSS Reboot、ウェブデザイン2006</title>
      <link>https://lowply.github.io/blog/2006/06/css-reboot-web-design-2006/</link>
      <pubDate>Fri, 16 Jun 2006 03:02:36 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/06/css-reboot-web-design-2006/</guid>
      <description>■ CSS Reboot に見るウェブデザインのトレンド : Lucky bag::blog
CSS Rebootというサイトで、今のウェブデザインのトレンドがわかるよ、というエントリー。
んで、Christian Montoyaが今回の Reboot でのデザインのトレンドについて書いていたんだけど、大雑把に書き出してみると下記のような感じ。
- 1024px の幅
- Silk Icons の使用
- 暗い背景に明るい色のテキスト
- 大きめのフッタ
Lucky bag::blog  1024px幅については、A List Apart が採用した幅 1024px のレイアウトというエントリーでも触れられています。ちょっと前に右サイドメニューを追加したmixiのトップもほぼ同じ幅。
いくつか関わっているサイトにGoogle Analyticsで簡単なアクセス解析をしているのですが、ビジターのディスプレイ解像度をチェックしてみると 1024pxは一番多く、1280px以上の人も結構多い。800x600の時代は終わったのかもしれないです。むしろ携帯端末のVGA化、フルブラウザの登場+パケット定額+TV対応、iPod向けムービーコンテンツ、YouTubeの台頭なんかで、640x480というサイズが見直されてくるのかもしれません。
それと、以前紹介した「Silk Icons」はやっぱり多用されているらしいです。背景も黒がトレンドということで、特に鏡面反射画像が映えるのはApple的解釈だと黒なのかなあ、と。。。トレンドを特に追うわけでもないですが、2006年という年を刻んでおければなあと思います。</description>
    </item>
    
    <item>
      <title>カナダのデザイン2つ</title>
      <link>https://lowply.github.io/blog/2006/06/two-canadian-designs/</link>
      <pubDate>Sun, 11 Jun 2006 02:47:45 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/06/two-canadian-designs/</guid>
      <description>Advertising/Design Goodnessから。
カナダ・トロントのデザイン会社BBDOが作ったペプシ・カナダのポスターはヘッドフォンジャックが付いていて音楽が聴けるというエントリー。こんな場所にもiPod効果。
それでAdvertising/Design Goodnessでもう一つ、Canadian Design Resourceというサイトがやばいというエントリー。
こちらはカナダのケチャップ＆ビネガー。
■ Canadian Design Resource</description>
    </item>
    
    <item>
      <title>Storm Chaserは実在した</title>
      <link>https://lowply.github.io/blog/2006/06/storm-chaser/</link>
      <pubDate>Wed, 07 Jun 2006 23:22:43 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/06/storm-chaser/</guid>
      <description>&amp;ldquo;Twister&amp;rdquo; (1996) は、竜巻を命がけで追う人々（Storm Chaser）の映画でしたが、Extreme Instabilityというサイトでは、アメリカ・ネブラスカから、本物の &amp;ldquo;Storm Chaser&amp;rdquo;こと Mike Hollingshead氏が驚愕の竜巻写真を大量に公開しています。サイト上で写真やDVDを販売中なので注文してみました。</description>
    </item>
    
    <item>
      <title>「Yahoo! UI Library CSS Tools」が良い</title>
      <link>https://lowply.github.io/blog/2006/06/yahoo-ui-library-css-tools-is-cool/</link>
      <pubDate>Tue, 06 Jun 2006 22:20:47 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/06/yahoo-ui-library-css-tools-is-cool/</guid>
      <description>Yahoo!（US）が提供しているJavaScriptのライブラリ「Yahoo! User Interface Library」。Flashチックなアニメーションやフォルダ等の階層ツリー表示を簡単に作成できるってことで使ったことは無いけどすごいなあと思っていたところ、5/8にバージョン「0.10.0」となってCSSのライブラリも登場。こちらは簡単で、項目も3つだけ。
 CSS Page Grids：一番作業効率に寄与してくれるであろう、段組レイアウト用CSS。大急ぎで段組レイアウトやろうとするときはかなり助かるはず。grids.cssを外部CSSとして読み込んで(X)HTMLソースもコピペですばやく段組が作れます。ただし互換モードだと崩れるとのこと。doctype宣言に注意。それと、 Grids rely on the width of an &amp;quot;em&amp;quot; provided by Fonts CSS; that file must be included. For the sake of this document, the convenience declarations within Reset CSS are also assumed. 3ping.org  上記のように残り2つのCSSも同時に読み込んで使うことが推奨されています。
 CSS Fonts：これはCSSファイル自体も便利ですが、一番素敵なのは、「フォントを&amp;quot;X&amp;quot;pxの大きさにしたかったら&amp;quot;Y&amp;quot;%を指定しなさい」という絶対指定⇔相対指定変換表。ちなみに同じ相対サイズでもem指定より%指定の方が正確性が高いとのこと。
 CSS Reset：全要素のマージン・パディングを0にしてフォントサイズを100%にしてリスト要素を…　というやつ。これはブラウザ個別にもっているdefault CSSの微妙な差を一度リセットする常套手段ですが、人（サイト）それぞれなので参考という感じで。
  Yahoo!謹製PDF版カンニングペーパーもあるようです。</description>
    </item>
    
    <item>
      <title>アフリカ・リミックス：多様化するアフリカの現代美術</title>
      <link>https://lowply.github.io/blog/2006/05/africa-remix/</link>
      <pubDate>Mon, 29 May 2006 05:15:08 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/africa-remix/</guid>
      <description>5/27から森美術館で開催中の「アフリカ・リミックス：多様化するアフリカの現代美術」。ご縁があって金曜日にプレオープン・レセプションに行きました。
アフリカ・リミックス展は、国内外を問わず、これまでにない大規模なスケールで現代アフリカ美術を紹介します。多種多様な文化・民族からなる広大なアフリカ大陸の国々では、西欧諸国からの影響を含む様々な文化的・社会的影響と混交の中で、現在どのような文化・芸術が花開いているかを検証します。本展では、アフリカ大陸全土にわたる25カ国から84名のアーティストによる約140の作品（絵画、素描、彫刻、アッサンブラージュ、インスタレーション、写真、ヴィデオ、デザイン家具など）を一挙に紹介します。 アフリカ・リミックス：プレスリリース  意外と写真作品が多くて、どれも素晴らしいです。展示は「アイデンティティと歴史」、「身体と魂」、「都市と大地」の3つのテーマで構成されていて、それぞれの作品は想像以上に前衛的。アフリカ現代美術なんて前知識が全くないので余計に難解でしたが、それでも文章にし難いエネルギーを感じてきました。来ていた人々もすごい迫力。8/31まで。カタログを熟読してもう一度行こうと思います。
 森美術館
  </description>
    </item>
    
    <item>
      <title>[祝] トラックバック</title>
      <link>https://lowply.github.io/blog/2006/05/trackbak-netafull/</link>
      <pubDate>Sun, 28 May 2006 01:30:11 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/trackbak-netafull/</guid>
      <description>このブログで初のトラックバックを、なんと[N]ネタフル様から頂きました。光栄です。ありがとうございます。
[N]ネタフル： livedoor readerの良さについて書いたら分かってくれた人がいた</description>
    </item>
    
    <item>
      <title>mixiを脱テーブル化するスタディ</title>
      <link>https://lowply.github.io/blog/2006/05/escape-from-table-layout-a-study-of-mixi/</link>
      <pubDate>Fri, 26 May 2006 04:52:29 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/escape-from-table-layout-a-study-of-mixi/</guid>
      <description>ためになるエントリーが多い3ping.orgからmixiをXHTML+CSSで組みなおすというエントリー。
- テーブルで組まれたmixiのhtmlファイル容量が48KB (自分のページ調べ)
- XHTML+CSSで構成されたhtmlファイル容量が16KB
この軽量化率が他のページにも当てはまるとすれば、mixiをXHTML+CSSで書き直すだけでhtmlファイルのトラフィックを3分の1にする事が出来る。mixiの１日のPVは1000万と聞いたけど、削減される転送量は月で何テラだろう。サーバー管理費にするといくらだろう。 3ping.org  3分の1というのは素晴らしい。CSSのソースも非常に洗練されていて、「一通りプロパティを覚えてCSSを使えるようになった」という人は絶対目を通したほうが良いと思います。一意のdiv要素内のタグに対して、極力クラス名を割り当てないでスタイルを適用するという、「カスケーディング」の理解が深まるはず。これがCSSの本当の魅力なんだと思います。 XHTMLとCSSの詳細な構造をグラフィカルにたどれるFirefoxの拡張FireBugを使うと、より勉強になります。最新バージョンにはJSのデバッガも付いて、かなり強力なコーディングツールになってます。
- JavaScript debugger for stepping through code one line at a time
- Status bar icon shows you when there is an error in a web page
- A console that shows errors from JavaScript and CSS
- Log messages from JavaScript in your web page to the console (bye bye &amp;quot;alert debugging&amp;quot;)
- An JavaScript command line (no more &amp;quot;javascript:&amp;quot; in the URL bar)</description>
    </item>
    
    <item>
      <title>Spike Jonze Special with YouTube</title>
      <link>https://lowply.github.io/blog/2006/05/spike-jonze-special-with-youtube/</link>
      <pubDate>Wed, 24 May 2006 01:56:01 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/spike-jonze-special-with-youtube/</guid>
      <description>YouTubeの楽しみ方にいまさら気づき、Spike Jonze特集。
 ミラー・ビールのCMオーディションの模様：カメ氏＆ペンギン氏。SWエピソードIII級のCG+ホームビデオってところがJonzeです。
 Bjork PV: Bjorkのmedullaは全編ヒューマン・ヴォイスで構成された異色中の異色アルバムでしたが、その中からJonzeによるPVを2つ。人の声と映像のマッチが美しいSyncronicityと、逆に大胆なミスマッチでぶっ飛びのラストシーンTriumph Of A Heart。
 GAP CM：思いつくJonzeも、OKを出したGAPも、予算も、壊れ方もすべてが神業。
  単純に検索して寄せ集めただけですが、日本ではめったに見れないNikeのCMとか、民放各局の報道特集、生放送での放送事故など、DVDで市販されてない&amp;amp;再放送の可能性も低いコンテンツは得意分野ですね。CM/著作権問題という大きい壁があるものの、うまくいけば今以上に貴重な映像資料の宝庫になるはず。
そんな中、fladdict.netから、はてなTUBEなる強烈なオンライン・ビデオツールが登場。akihiro kamijo氏のブログでは、ついにアメリカで既存のTV番組のネット配信スタートの記事（akihiro kamijo : アメリカの番組配信サービスのお話）などなど。</description>
    </item>
    
    <item>
      <title>Livedoor Readerを使いこなす</title>
      <link>https://lowply.github.io/blog/2006/05/using-livedoor-reader/</link>
      <pubDate>Wed, 24 May 2006 01:19:00 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/using-livedoor-reader/</guid>
      <description>スーパー・アルファ &amp;ldquo;[N]ネタフル&amp;rdquo; よりlivedoor readerの良さを伝えるチャットというエントリー。
いしたにの発言: enter、enter、たまにshift＋enter
いしたにの発言: pしてo
いしたにの発言: これ！
いしたにの発言: 次はshift↓ですけどね
いしたにの発言: Pしてoの感激で他は覚えますよ
 これ使ってない人には何のことだかわからないし、使っていても僕のように「ピン」の活用を知らない人間にとっては驚きの会話。やってみると・・・まさしく、PしてO！！さらにCと組み合わせ、自動更新ONでタブに常駐がベスト。ためになります。http://reader.livedoor.com/ のポップアップ・ブロックをオフにするのをお忘れなく。
 Livedoor Reader  </description>
    </item>
    
    <item>
      <title>WebStandard on IE7 beta2 preview</title>
      <link>https://lowply.github.io/blog/2006/05/webstandard-on-ie7-beta2-preview/</link>
      <pubDate>Sat, 20 May 2006 22:14:13 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/webstandard-on-ie7-beta2-preview/</guid>
      <description>現時点での（そして正式リリースまで変わらないであろう）IE7での改善点をメモ。
○
 CSSプロパティ「position:fixed;」をサポート
 alpha値を含むPNGをサポート
 文書の先頭にxml宣言があっても標準モードへスイッチ
 ActiveXObjectではなく、XMLHTTPRequestをネイティブでサポート  相当良くなってきました。タブつきなので普及のスピードも速いはず。
×
 MIMEタイプ「application/xml+xhtml」はサポートしない方針
 Acid2 Testは全くだめ
  ダウンロード：Internet Explorer 7 Beta 2 Preview 日本語版</description>
    </item>
    
    <item>
      <title>ディスカバリーチャンネルがiPodで見れる</title>
      <link>https://lowply.github.io/blog/2006/05/discovery-channel-is-available-on-ipod/</link>
      <pubDate>Wed, 17 May 2006 23:22:06 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/discovery-channel-is-available-on-ipod/</guid>
      <description>Discovery Channel content arrives on iTunes - Apple Insider
ドキュメンタリーの金字塔 Discovery Channel がiTunes Music Storeから買えるようになるという記事。これはもう第五世代iPodに買い換えるしかない！
iTunes Music Store USでは &amp;ldquo;24&amp;ldquo;、&amp;rdquo;LOST&amp;ldquo;、&amp;rdquo;PrisonBreak&amp;ldquo;、&amp;rdquo;Sopranos&amp;rdquo; など超強力なラインナップが揃っててうらやましいです。</description>
    </item>
    
    <item>
      <title>DWカスタマイズ：CodeHints.xml</title>
      <link>https://lowply.github.io/blog/2006/05/dw-customize-codehints-xml/</link>
      <pubDate>Mon, 15 May 2006 22:54:35 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/dw-customize-codehints-xml/</guid>
      <description>Dreamweaver8でCSSを書いていると、誰でも一度は「width」を入力しようとして、コードヒントのせいで「widows」プロパティというわけわかんないやつを出してしまうものです。この「コードヒント」の設定ファイルが、CodeHint.xmlで、Windowsなら C:\Program Files\Macromedia\Dreamweaver 8\configuration\CodeHints 内にあります。
で、これをカスタマイズしちゃって、あんまり使わないプロパティ（アジマスとか）をごっそりコメントアウト＆マージンとかの左右上下を時計回りに並べ替えたりしてしまった方を発見。さっそく使ってみたところものすごく便利。DWのコードヒントはいろいろなソフトの中でも特に秀逸なのに、さらにパワーアップです。
5/10にはDW8.0.2Updateも出ていて、こちらはIEのActiveX - Flash問題に対応していないHTMLを自動的に修正（JavaScriptを加える）してくれたりします。
 カラクリエイト:widowsプロパティの誤入力を防ぐCodeHints.xml
 Dreamweaver 8.0.2 Update  </description>
    </item>
    
    <item>
      <title>Distillery Leipzig 06/01/2006</title>
      <link>https://lowply.github.io/blog/2006/05/distillery-leipzig-06-01-2006/</link>
      <pubDate>Thu, 11 May 2006 02:13:43 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/distillery-leipzig-06-01-2006/</guid>
      <description>DnBミックスをアップし続けている breaksblog.biz へ、2006年最初のBukemのミックスが登場。
選曲はかなりクオリティ高く、かつリスナーを選びそうな雰囲気です。今回は今までよりも少し暗めのトーンで、異色ベースラインのトラックが多く、日本では受けない感じ。ミックスは変わらず上手&amp;amp;どんなDJにも似ていない。ただ、コンラッドは最近不調な気もします。。 30min辺りからの &amp;ldquo;Furney &amp;amp; Tayla - I Chose You&amp;rdquo; を最初に聞いたときは鳥肌が立った。泣けます。続く &amp;ldquo;LTJ Bukem - Switch&amp;rdquo; も、結構前からかけてるみたいですが、これはもうDnBじゃなくてJazzですね。</description>
    </item>
    
    <item>
      <title>NHKスペシャル – プラネットアース</title>
      <link>https://lowply.github.io/blog/2006/05/nhk-special-planet-earth/</link>
      <pubDate>Tue, 09 May 2006 00:25:49 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/nhk-special-planet-earth/</guid>
      <description>NHKで7日スタートしたドキュメンタリー「プラネットアース」第一回を見ました。現在第二回を放送中。夜10時からです。
これは、NHKとBBCが五年の歳月をかけて撮影・制作した大型自然ドキュメンタリー。神秘と美しさにあふれる生命の星・地球の姿を、最高のハイビジョン映像で描いた野心的なシリーズです。 中略 BBCが培ってきた世界第一線の自然・動物カメラマンの力と、NHKがもつハイビジョンの新しい技術が結集。全世界２００カ所以上で大自然と向かい合いました。
www.nhk.or.jp : 2006/05/09  ということですが、映像テクノロジーは本当に脅威的です。NHKに視聴料しっかり払わないと。</description>
    </item>
    
    <item>
      <title>LTJ Bukem Documentary</title>
      <link>https://lowply.github.io/blog/2006/05/ltj-bukem-documentary/</link>
      <pubDate>Wed, 03 May 2006 02:14:28 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/ltj-bukem-documentary/</guid>
      <description>YouTube。日本からのアクセスが凄まじい勢いで成長中というニュースもありましたが、 僕にとって「音楽の全て」と呼べるLTJ Bukemのドキュメンタリーを発見。YouTubeがあって良かった、ネットがあって良かった、本当に良かった。BBCで放送されたものらしく、また使われているトラックから判断すると1995年前後に撮影されたものらしい。
Goodlooking Recordsのヘッド「Tony」氏が、目覚めの悪いConradに水をぶっ掛けて起こすシーンから始まり、また別の朝にマネージャーとして雇った元ボクシングコーチが、ドアを蹴破って起こしに行くまでの50分間。ほとんどTony氏を中心に構成されています。
BukemのDJの練習の様子やトラック制作の現場など超レアなシーンが満載。もう全編通して名言だらけですが、一番この時期っぽいのは &amp;ldquo;This&amp;rsquo;s not a Jungle, This&amp;rsquo;s not a Jungle, This&amp;rsquo;s Drum And Bass, This&amp;rsquo;s Drum And Bass !!!&amp;rdquo; って女子トイレで客が叫ぶシーン。
「アイロンサービス」を連呼するトニー、Sonyとの契約で日本を訪れるシーン、ブケムの寝顔などなど、書き始めると止まらないので、あとはリンクを貼り付けておきますが、いつ消えるかはわかりません。
Good Looking Rec自体はもうかなり長期間リリースをしていないしサイトも止まってしまっているので心配ですが、一応New Website Coming Soonらしいです。
LTJ Bukem Documentary from YouTube Part 1 / Part 2</description>
    </item>
    
    <item>
      <title>Gmail Mobile is coming</title>
      <link>https://lowply.github.io/blog/2006/05/gmail-mobile-is-coming/</link>
      <pubDate>Wed, 03 May 2006 02:10:52 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/gmail-mobile-is-coming/</guid>
      <description>いつの間にか日本版Gmail Mobileが動き始めています。今までできなかったログインができる様になっていて、メールボックスやタイトルも表示されています。 ただし、まだ日本語が文字化けしているので使えません。（PCからのアクセスだと日本語もしっかり通ります。docomoだとOKなのかな？）　きっともうすぐオフィシャルリリースが来ます。これで国内旅行ならノートPCは要らなくなるはず。 極小のGmailロゴが素敵です。
 Gmail
 Gmail Mobile  </description>
    </item>
    
    <item>
      <title>煙と金と沈む島</title>
      <link>https://lowply.github.io/blog/2006/05/smoke-gold-and-sinking-island/</link>
      <pubDate>Wed, 03 May 2006 02:03:09 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/smoke-gold-and-sinking-island/</guid>
      <description>「煙と金と沈む島」の再放送を見ました。同じ日に、世界の3つの場所で何が起こっているのかを伝えるNHKスペシャル同時三点のシリーズドキュメンタリー番組の第四回。
中国重慶の工場経営者は、生産を増やして少しでも家族を楽にさせたい。日米の企業は重慶から大量に出る煙を、京都議定書に基づいて排出権として買い集め、マネーゲームを展開する。この煙は地球の温度と海水面を少しずつ上げていて、南国ツバルの大潮の日、海水が道路から湧き出してくる異常な状態が続いている。子供たちは国外に移住したほうがいいが、俺はここに残る、とツバルの長老。この問題がどんなに深刻か良く伝わる、とても深いドキュメンタリー。
 同時3点ドキュメント第4回　「煙と金と沈む島」  </description>
    </item>
    
    <item>
      <title>FirefoxとGoogleの今後</title>
      <link>https://lowply.github.io/blog/2006/05/future-of-firefox-and-google/</link>
      <pubDate>Wed, 03 May 2006 01:59:52 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/future-of-firefox-and-google/</guid>
      <description>Googleの技術者が語る「Firefoxへの深いかかわり」 : ITpro
GoogleとFirefoxは今後も連携を強めていくらしい、という記事。いろいろと書いてあり興味深いですが一番気になったのは、
 Whatと呼ぶ，ローカルにデータを保存する機能をサポートする。WhatはMozilla，Apple，Operaが参加するWthatワーキング・グループで標準化が行われている仕様。cookieの拡張だが，cookieのようにデータそのものをHTTPリクエストに含めることはないfrom ITpro : 2006/05/01
 という部分。気になります。なんというか最近特にIE vs その他みたいな構図が目立つ気がします。</description>
    </item>
    
    <item>
      <title>Frank Gehryのオフィスが見れる</title>
      <link>https://lowply.github.io/blog/2006/05/a-video-of-frank-gehrys-office/</link>
      <pubDate>Mon, 01 May 2006 03:33:28 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/05/a-video-of-frank-gehrys-office/</guid>
      <description>ちょっと前から、TIFFANY&amp;amp;CO. でFrank Gehryコレクションが出ています。彫刻のような建築を生み出す巨匠が、どんなジュエリーデザインをするのかは興味がありますが、それ以上に要チェックなのが8分間のショートフィルム。
フルフラッシュサイトなのでFlash Movieですが、かなり良いメイキングです。ゲーリーへのインタビューや広大なオフィスの様子を見ることができます。</description>
    </item>
    
    <item>
      <title>森山大道のDVDが出るらしい</title>
      <link>https://lowply.github.io/blog/2006/04/a-dvd-of-daido-moriyama-will-be-released/</link>
      <pubDate>Sat, 29 Apr 2006 03:22:30 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/04/a-dvd-of-daido-moriyama-will-be-released/</guid>
      <description>Web Magazine honeyee.com [ハニカム] から。
1973年に森山大道が撮影したものの、採用されずに忘れ去られたフィルムが発見され、DVDとして復活という記事。
 何が映っているのか判然としない、荒れてボケた画面。ストーリーらしいストーリーはなく、聞こえるのは走り回るバイクの音や車のクラクションだけ。目をこらすとかろうじて、夜の繁華街らしきところなのがわかる。画面の端から端へ流れる白と黒の粒子に、心がざわつく。from honeyee.com : 2006/04/28
 DVDのタイトルは 「25時 shinjuku 1973」
アーティストのある作品が、当時は採用されなかったとしても後々評価されるって最高です。価格は65万円。
 森山大道オフィシャルサイト  </description>
    </item>
    
    <item>
      <title>Google Maps Euro</title>
      <link>https://lowply.github.io/blog/2006/04/google-maps-euro/</link>
      <pubDate>Thu, 27 Apr 2006 12:11:07 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/04/google-maps-euro/</guid>
      <description>Google Maps in Europe 発表。
 Accompanying this release, we have greatly improved high resolution imagery coverage for Europe in both Google Maps and Google Earth. Check out the Eiffel Tower in Paris, Olympiastadion in Berlin, and the Grand Canal in Venice.from Google Official Blog : 2006/04/26
 先日から、MapsとLocalの名称を統合するという発表もあったり、APIもv2が出たりと動きがありましたが、今回は4ヶ国同時対応です。さらに、衛星写真の解像度が日本のMapsの数倍高くなっているので、エッフェル塔かなり。
いろいろ発見できるのが一つの楽しみですが、またそんなチャンスが増えました。
 Google Official Blog  </description>
    </item>
    
    <item>
      <title>Dayvan Cowboy PV</title>
      <link>https://lowply.github.io/blog/2006/04/dayvan-cowboy-pv/</link>
      <pubDate>Mon, 17 Apr 2006 02:04:26 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/04/dayvan-cowboy-pv/</guid>
      <description>ストイック&amp;amp;エレクトロニック。Boards Of Canadaから新作EP &amp;ldquo;Trans Canada Highway EP&amp;rdquo; のリリースが決定。日付は06/06/06で、プレオーダー受付中。彼らのライブはものすごいらしいので、本当に来日が待ち焦がれます。
さらにこちらでは、ギター音源を積極的に取り入れた最新アルバム &amp;ldquo;The Campfire Headphase&amp;rdquo; から傑作&amp;rdquo;Dayvan Cowboy&amp;rdquo;のPVを配信中。完全に音楽と一体化した美しいビデオとなってます。
 Warp Records BOC interview from bounce.com  </description>
    </item>
    
    <item>
      <title>Google Calendar</title>
      <link>https://lowply.github.io/blog/2006/04/google-calendar/</link>
      <pubDate>Fri, 14 Apr 2006 00:13:32 +0900</pubDate>
      
      <guid>https://lowply.github.io/blog/2006/04/google-calendar/</guid>
      <description>昨年からCL2のコードネームで噂されていた、Googleのオンラインカレンダー Google Calendar がついに登場。Gmailから想像するより動作は速く、実用に耐えそうです。でもさすがに感触はiCalの方が使いやすくて、ブラウザの中であれもできます、これもできますっていうのも、今はプログラマ達の技術力のアピールという意味合いが強いようで、正直どうなんでしょうか。。そんな中でGoogleはどれくらい実用的なツールとしてこの新しいオンラインアプリケーションを仕上げてくるのか、とても気になります。</description>
    </item>
    
  </channel>
</rss>